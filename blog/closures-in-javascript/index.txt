3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","closures-in-javascript","d"]
0:["2qmWCf6pyIsm5Xv15HEy9",[[["",{"children":["blog",{"children":[["slug","closures-in-javascript","d"],{"children":["__PAGE__?{\"slug\":\"closures-in-javascript\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","closures-in-javascript","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"Closures in JavaScript: What They Are and Why They Matter"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"JavaScript is full of interesting features, and one of the most powerful (and sometimes confusing) is the **closure**. If you’ve ever returned a function from another function or seen variables that somehow “remember” their environment, you were probably looking at a closure.","properties":{}},{"id":"block-1","type":"paragraph","content":"In this article, we’ll break down what closures are, how they work, and why they’re so useful—no computer science degree required!","properties":{}},{"id":"block-2","type":"divider","content":"---","properties":{}},{"id":"block-3","type":"heading_2","content":"🧠 What Is a Closure?","properties":{}},{"id":"block-4","type":"paragraph","content":"A **closure** happens when a function **remembers** the variables from the scope in which it was created—even after that scope has finished running.","properties":{}},{"id":"block-5","type":"paragraph","content":"In simple terms:","properties":{}},{"id":"block-6","type":"quote","content":"> A closure gives you access to an outer function’s variables even after the outer function has returned.","properties":{}},{"id":"block-7","type":"paragraph","content":"Here’s a classic example:","properties":{}},{"id":"block-8","type":"code","content":"```javascript\n`\nfunction makeCounter() {\n  let count = 0;\n\n  return function () {\n    count++;\n    return count;\n  };\n}\n\nconst counter = makeCounter();\n\nconsole.log(counter()); // 1\nconsole.log(counter()); // 2\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-9","type":"paragraph","content":"Why does this work?","properties":{}},{"id":"block-10","type":"paragraph","content":"Even though `makeCounter` has already run and finished, the inner function still has access to the `count` variable. That’s a closure in action!","properties":{}},{"id":"block-11","type":"divider","content":"---","properties":{}},{"id":"block-12","type":"heading_2","content":"🧩 How Closures Work","properties":{}},{"id":"block-13","type":"paragraph","content":"To understand closures, you just need to know:","properties":{}},{"id":"block-14","type":"bulleted_list_item","content":"- Every time a function is created, it remembers the variables in its surrounding scope.","properties":{}},{"id":"block-15","type":"bulleted_list_item","content":"- This memory is kept alive as long as the inner function is still being used.","properties":{}},{"id":"block-16","type":"paragraph","content":"Closures \"close over\" the variables they need—hence the name.","properties":{}},{"id":"block-17","type":"divider","content":"---","properties":{}},{"id":"block-18","type":"heading_2","content":"🚀 Why Are Closures Useful?","properties":{}},{"id":"block-19","type":"paragraph","content":"Closures are powerful for many reasons:","properties":{}},{"id":"block-20","type":"heading_3","content":"✅ Data Privacy","properties":{}},{"id":"block-21","type":"paragraph","content":"You can use closures to **hide private variables**:","properties":{}},{"id":"block-22","type":"code","content":"```javascript\n`\nfunction createSecret() {\n  const secret = '🌟 Top secret';\n\n  return {\n    getSecret: () => secret\n  };\n}\n\nconst mySecret = createSecret();\nconsole.log(mySecret.getSecret()); // \"🌟 Top secret\"\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-23","type":"paragraph","content":"No one can change `secret` from the outside. It’s safely tucked inside the closure.","properties":{}},{"id":"block-24","type":"divider","content":"---","properties":{}},{"id":"block-25","type":"heading_3","content":"🔄 Preserving State","properties":{}},{"id":"block-26","type":"paragraph","content":"Closures help maintain **state** between function calls, like our `makeCounter` example.","properties":{}},{"id":"block-27","type":"paragraph","content":"This is useful in:","properties":{}},{"id":"block-28","type":"bulleted_list_item","content":"- Event handlers","properties":{}},{"id":"block-29","type":"bulleted_list_item","content":"- Functional programming","properties":{}},{"id":"block-30","type":"bulleted_list_item","content":"- React hooks (they often rely on closures!)","properties":{}},{"id":"block-31","type":"divider","content":"---","properties":{}},{"id":"block-32","type":"heading_3","content":"🛠️ Function Factories","properties":{}},{"id":"block-33","type":"paragraph","content":"You can create functions that are customized with closures:","properties":{}},{"id":"block-34","type":"code","content":"```javascript\n`\nfunction greet(name) {\n  return function (message) {\n    return `Hi ${name}, ${message}`;\n  };\n}\n\nconst greetCamila = greet('Camila');\nconsole.log(greetCamila('welcome to the team!')); // \"Hi Camila, welcome to the team!\"\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-35","type":"divider","content":"---","properties":{}},{"id":"block-36","type":"heading_2","content":"⚠️ Gotchas","properties":{}},{"id":"block-37","type":"paragraph","content":"Closures can be tricky when used inside loops:","properties":{}},{"id":"block-38","type":"code","content":"```javascript\n`\nfor (var i = 0; i < 3; i++) {\n  setTimeout(() => console.log(i), 1000);\n}\n// Output: 3 3 3\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-39","type":"paragraph","content":"To fix it, use `let` instead of `var`:","properties":{}},{"id":"block-40","type":"code","content":"```javascript\n`\nfor (let i = 0; i < 3; i++) {\n  setTimeout(() => console.log(i), 1000);\n}\n// Output: 0 1 2\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-41","type":"paragraph","content":"`let` creates a new binding for each iteration, so each function remembers the correct value.","properties":{}},{"id":"block-42","type":"divider","content":"---","properties":{}},{"id":"block-43","type":"heading_2","content":"✅ Quick Recap","properties":{}},{"id":"block-44","type":"bulleted_list_item","content":"- ✅ A **closure** is a function that remembers variables from its outer scope.","properties":{}},{"id":"block-45","type":"bulleted_list_item","content":"- ✅ Use closures for **state**, **data privacy**, and **custom function behavior**.","properties":{}},{"id":"block-46","type":"bulleted_list_item","content":"- ✅ Be mindful of loops and scope when using closures.","properties":{}},{"id":"block-47","type":"divider","content":"---","properties":{}},{"id":"block-48","type":"heading_2","content":"🧠 Final Thoughts","properties":{}},{"id":"block-49","type":"paragraph","content":"Closures are one of the key ideas behind JavaScript’s flexibility. Once you get comfortable with them, you’ll start seeing them everywhere in callbacks, timers, React, and more.","properties":{}},{"id":"block-50","type":"paragraph","content":"You don’t need to master all the theory to use closures well just remember:","properties":{}},{"id":"block-51","type":"paragraph","content":"If a function can access variables from outside itself, and keep using them later, that’s a closure.","properties":{}},{"id":"block-52","type":"paragraph","content":"Closures = memory + functions. Simple as that.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"June 12, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","JavaScript",{"className":"post-tag","children":["#","JavaScript"]}],["$","span","closures",{"className":"post-tag","children":["#","closures"]}]]}]]}]]}]]}]}]
