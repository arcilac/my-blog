3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","database-migrations-prisma-knex","d"]
0:["gwjwrzBKYUfERbK0d3yGV",[[["",{"children":["blog",{"children":[["slug","database-migrations-prisma-knex","d"],{"children":["__PAGE__?{\"slug\":\"database-migrations-prisma-knex\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","database-migrations-prisma-knex","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"Database Migrations with Prisma and Knex.js"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"Managing database schema changes in a controlled and reliable way is essential for the health of any modern application. In the Node.js ecosystem, tools like Prisma and Knex.js offer different yet effective ways to handle migrations. This blog explores how each tool works, and how to choose the best one for your project.","properties":{}},{"id":"block-1","type":"divider","content":"---","properties":{}},{"id":"block-2","type":"heading_2","content":"What Are Migrations?","properties":{}},{"id":"block-3","type":"paragraph","content":"Migrations are scripts or files that define changes to your database schemaâ€”adding or removing tables, columns, indexes, etc. They allow you to evolve your database structure over time without losing data or having to manually reapply changes in different environments.","properties":{}},{"id":"block-4","type":"divider","content":"---","properties":{}},{"id":"block-5","type":"heading_2","content":"Prisma Migrations","properties":{}},{"id":"block-6","type":"paragraph","content":"Prisma is an ORM that uses a declarative schema to define models, and automatically generates SQL migrations based on changes to that schema.","properties":{}},{"id":"block-7","type":"heading_3","content":"Setting Up","properties":{}},{"id":"block-8","type":"paragraph","content":"First, install Prisma and initialize it:","properties":{}},{"id":"block-9","type":"code","content":"```shell\n`\nnpm install @prisma/cli --save-dev\nnpx prisma init\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-10","type":"paragraph","content":"This creates a `prisma/schema.prisma` file and a `.env` for your database connection.","properties":{}},{"id":"block-11","type":"heading_3","content":"Creating a Migration","properties":{}},{"id":"block-12","type":"paragraph","content":"Once you've defined or changed models in your schema, run:","properties":{}},{"id":"block-13","type":"code","content":"```shell\n`\nnpx prisma migrate dev --name add_users_table\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-14","type":"paragraph","content":"This generates a new migration and applies it to your database.","properties":{}},{"id":"block-15","type":"heading_3","content":"Example Model","properties":{}},{"id":"block-16","type":"code","content":"```javascript\n`\nmodel User {\n  id    Int     @id @default(autoincrement())\n  name  String\n  email String  @unique\n}\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-17","type":"paragraph","content":"This model will generate a migration that creates a `User` table with the specified columns and constraints.","properties":{}},{"id":"block-18","type":"heading_3","content":"Applying Migrations","properties":{}},{"id":"block-19","type":"paragraph","content":"To apply all pending migrations to your database (e.g., in production):","properties":{}},{"id":"block-20","type":"code","content":"```shell\n`\nnpx prisma migrate deploy\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-21","type":"divider","content":"---","properties":{}},{"id":"block-22","type":"heading_2","content":"Knex.js Migrations","properties":{}},{"id":"block-23","type":"paragraph","content":"Knex.js is a SQL query builder that also includes a robust migration system. Unlike Prisma, Knex is imperative and gives you full control over SQL queries.","properties":{}},{"id":"block-24","type":"heading_3","content":"Setting Up","properties":{}},{"id":"block-25","type":"paragraph","content":"Install Knex and your database driver:","properties":{}},{"id":"block-26","type":"code","content":"```shell\n`\nnpm install knex pg\nnpx knex init\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-27","type":"paragraph","content":"This creates a `knexfile.js` with environment-specific configs.","properties":{}},{"id":"block-28","type":"heading_3","content":"Creating a Migration","properties":{}},{"id":"block-29","type":"code","content":"```shell\n`\nnpx knex migrate:make create_users_table\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-30","type":"paragraph","content":"This generates a timestamped file in `migrations/`.","properties":{}},{"id":"block-31","type":"heading_3","content":"Example Migration","properties":{}},{"id":"block-32","type":"code","content":"```javascript\n`\nexports.up = function (knex) {\n  return knex.schema.createTable('users', function (table) {\n    table.increments('id');\n    table.string('name');\n    table.string('email').unique();\n  });\n};\n\nexports.down = function (knex) {\n  return knex.schema.dropTable('users');\n};\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-33","type":"paragraph","content":"The `up` method defines the schema change, and the `down` method defines how to revert it.","properties":{}},{"id":"block-34","type":"heading_3","content":"Running Migrations","properties":{}},{"id":"block-35","type":"code","content":"```shell\n`\nnpx knex migrate:latest\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-36","type":"paragraph","content":"This runs all pending migrations in order.","properties":{}},{"id":"block-37","type":"divider","content":"---","properties":{}},{"id":"block-38","type":"heading_2","content":"Prisma vs Knex.js","properties":{}},{"id":"block-39","type":"table","content":"| Feature        | Prisma                         | Knex.js                        |\n| -------------- | ------------------------------ | ------------------------------ |\n| Style          | Declarative                    | Imperative                     |\n| Learning Curve | Easier for beginners           | More control, but verbose      |\n| Type Safety    | Built-in with TypeScript       | Depends on manual typing       |\n| Raw SQL        | Possible, but not the default  | Encouraged and easy            |\n| Rollbacks      | Automatic with `migrate reset` | Custom `down` methods required |","properties":{}},{"id":"block-39-0","type":"table_row","content":"","properties":{}},{"id":"block-39-1","type":"table_row","content":"","properties":{}},{"id":"block-39-2","type":"table_row","content":"","properties":{}},{"id":"block-39-3","type":"table_row","content":"","properties":{}},{"id":"block-39-4","type":"table_row","content":"","properties":{}},{"id":"block-39-5","type":"table_row","content":"","properties":{}},{"id":"block-40","type":"divider","content":"---","properties":{}},{"id":"block-41","type":"heading_2","content":"Best Practices for Migrations","properties":{}},{"id":"block-42","type":"numbered_list_item","content":"1. **Always use version control** to track migration files.","properties":{}},{"id":"block-43","type":"numbered_list_item","content":"2. **Test migrations in staging** before applying to production.","properties":{}},{"id":"block-44","type":"numbered_list_item","content":"3. **Avoid destructive changes** (e.g., dropping tables) without backups.","properties":{}},{"id":"block-45","type":"numbered_list_item","content":"4. **Use consistent naming** (e.g., `add_users_table`, `add_email_to_users`).","properties":{}},{"id":"block-46","type":"numbered_list_item","content":"5. **Keep data seeding and schema migrations separate**.","properties":{}},{"id":"block-47","type":"divider","content":"---","properties":{}},{"id":"block-48","type":"heading_2","content":"Conclusion","properties":{}},{"id":"block-49","type":"paragraph","content":"Both Prisma and Knex.js offer great migration toolsâ€”it just depends on your style and project needs. Prisma is ideal for fast development and strong typing, while Knex is better if you need full control over SQL or complex migration logic. Whichever you choose, following best practices ensures your database evolves safely alongside your application.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"May 12, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","Node.js",{"className":"post-tag","children":["#","Node.js"]}],["$","span","prisma",{"className":"post-tag","children":["#","prisma"]}],["$","span","Databases",{"className":"post-tag","children":["#","Databases"]}]]}]]}]]}]]}]}]
