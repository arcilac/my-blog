3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","browser-storage-options-web-applications","d"]
0:["6PJ0KbyGIdJvgwrODRBpQ",[[["",{"children":["blog",{"children":[["slug","browser-storage-options-web-applications","d"],{"children":["__PAGE__?{\"slug\":\"browser-storage-options-web-applications\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","browser-storage-options-web-applications","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"Browser Storage Options for Modern Web Applications"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"When developing web applications, data storage on the client side is often necessary for a better user experience. Modern browsers offer several options for storing data locally. In this blog post, we'll explore the four main browser storage options: LocalStorage, SessionStorage, IndexedDB, and Cookies.","properties":{}},{"id":"block-1","type":"heading_2","content":"LocalStorage","properties":{}},{"id":"block-2","type":"paragraph","content":"LocalStorage provides a simple key-value storage mechanism that persists even after the browser is closed. It's perfect for storing user preferences, theme settings, or any non-sensitive data that should be available between sessions.","properties":{}},{"id":"block-3","type":"paragraph","content":"**Key Features:**","properties":{}},{"id":"block-4","type":"bulleted_list_item","content":"- Stores data without expiration date","properties":{}},{"id":"block-5","type":"bulleted_list_item","content":"- Data persists after browser restarts","properties":{}},{"id":"block-6","type":"bulleted_list_item","content":"- Storage limit of approximately 5MB","properties":{}},{"id":"block-7","type":"bulleted_list_item","content":"- Synchronous API","properties":{}},{"id":"block-8","type":"bulleted_list_item","content":"- Domain-specific (same-origin policy)","properties":{}},{"id":"block-9","type":"paragraph","content":"**Example Usage:**","properties":{}},{"id":"block-10","type":"code","content":"```javascript\n`\n// Storing data\nlocalStorage.setItem('username', 'JohnDoe');\nlocalStorage.setItem('theme', 'dark');\n\n// Retrieving data\nconst username = localStorage.getItem('username');\nconsole.log(username); // Output: JohnDoe\n\n// Removing data\nlocalStorage.removeItem('username');\n\n// Clearing all data\nlocalStorage.clear();\n`\n```","properties":{"language":"$undefined"}},{"id":"block-11","type":"heading_2","content":"SessionStorage","properties":{}},{"id":"block-12","type":"paragraph","content":"SessionStorage works similarly to LocalStorage but with one key difference: the data is only available for the duration of the page session. Once the tab or browser is closed, the data is cleared.","properties":{}},{"id":"block-13","type":"paragraph","content":"**Key Features:**","properties":{}},{"id":"block-14","type":"bulleted_list_item","content":"- Data available only during the session","properties":{}},{"id":"block-15","type":"bulleted_list_item","content":"- Cleared when tab/browser is closed","properties":{}},{"id":"block-16","type":"bulleted_list_item","content":"- Storage limit of approximately 5MB","properties":{}},{"id":"block-17","type":"bulleted_list_item","content":"- Synchronous API","properties":{}},{"id":"block-18","type":"bulleted_list_item","content":"- Tab-specific (data isn't shared between tabs)","properties":{}},{"id":"block-19","type":"paragraph","content":"**Example Usage:**","properties":{}},{"id":"block-20","type":"code","content":"```javascript\n`\n// Storing session data\nsessionStorage.setItem('temporaryToken', 'abc123xyz789');\nsessionStorage.setItem('currentPage', '5');\n\n// Retrieving session data\nconst currentPage = sessionStorage.getItem('currentPage');\nconsole.log(currentPage); // Output: 5\n\n// Clearing session data\nsessionStorage.clear();\n`\n```","properties":{"language":"$undefined"}},{"id":"block-21","type":"heading_2","content":"IndexedDB","properties":{}},{"id":"block-22","type":"paragraph","content":"IndexedDB is a more robust, low-level API for client-side storage of significant amounts of structured data. It's ideal for applications that need to store complex data types, search through records, or handle large amounts of data.","properties":{}},{"id":"block-23","type":"paragraph","content":"**Key Features:**","properties":{}},{"id":"block-24","type":"bulleted_list_item","content":"- Object-oriented database","properties":{}},{"id":"block-25","type":"bulleted_list_item","content":"- Asynchronous API","properties":{}},{"id":"block-26","type":"bulleted_list_item","content":"- Supports complex data structures","properties":{}},{"id":"block-27","type":"bulleted_list_item","content":"- Supports transactions","properties":{}},{"id":"block-28","type":"bulleted_list_item","content":"- Significantly larger storage capacity (generally 50MB or more)","properties":{}},{"id":"block-29","type":"bulleted_list_item","content":"- Uses indexes for fast searches","properties":{}},{"id":"block-30","type":"paragraph","content":"**Example Usage:**","properties":{}},{"id":"block-31","type":"code","content":"```javascript\n`\n// Opening a database\nconst request = indexedDB.open('MyDatabase', 1);\n\nrequest.onupgradeneeded = function(event) {\n  const db = event.target.result;\n\n  // Create an object store\n  const objectStore = db.createObjectStore('customers', { keyPath: 'id' });\n\n  // Create an index\n  objectStore.createIndex('name', 'name', { unique: false });\n};\n\nrequest.onsuccess = function(event) {\n  const db = event.target.result;\n\n  // Add data\n  const transaction = db.transaction(['customers'], 'readwrite');\n  const objectStore = transaction.objectStore('customers');\n\n  const customer = { id: 1, name: 'John Doe', email: 'john@example.com' };\n  objectStore.add(customer);\n\n  // Transaction completed\n  transaction.oncomplete = function() {\n    console.log('Transaction completed');\n  };\n};\n`\n```","properties":{"language":"$undefined"}},{"id":"block-32","type":"heading_2","content":"Cookies","properties":{}},{"id":"block-33","type":"paragraph","content":"Cookies are the oldest method of storing data in browsers. While they have some limitations compared to newer options, they're still useful for certain scenarios, especially when server interaction is required.","properties":{}},{"id":"block-34","type":"paragraph","content":"**Key Features:**","properties":{}},{"id":"block-35","type":"bulleted_list_item","content":"- Can be read by the server on each request","properties":{}},{"id":"block-36","type":"bulleted_list_item","content":"- Limited storage (typically 4KB per cookie)","properties":{}},{"id":"block-37","type":"bulleted_list_item","content":"- Can set expiration dates","properties":{}},{"id":"block-38","type":"bulleted_list_item","content":"- Can be secured and restricted to HTTPS","properties":{}},{"id":"block-39","type":"bulleted_list_item","content":"- Can be scoped to specific paths within a domain","properties":{}},{"id":"block-40","type":"paragraph","content":"**Example Usage:**","properties":{}},{"id":"block-41","type":"code","content":"```javascript\n`\n// Setting a cookie\ndocument.cookie = \"username=JohnDoe; expires=Fri, 31 Dec 2023 23:59:59 GMT; path=/\";\n\n// Setting a secure cookie\ndocument.cookie = \"authToken=abc123; Secure; SameSite=Strict\";\n\n// Reading cookies\nconsole.log(document.cookie);\n\n// Deleting a cookie (set expiration in the past)\ndocument.cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n`\n```","properties":{"language":"$undefined"}},{"id":"block-42","type":"heading_2","content":"Comparison and When to Use Each Option","properties":{}},{"id":"block-43","type":"table","content":"| Storage Type   | Data Persistence         | Size Limit | API Type     | Best For                                              |\n| -------------- | ------------------------ | ---------- | ------------ | ----------------------------------------------------- |\n| LocalStorage   | Until explicitly deleted | ~5MB       | Synchronous  | User preferences, non-sensitive persistent data       |\n| SessionStorage | Tab session              | ~5MB       | Synchronous  | Form data, page positions, temporary values           |\n| IndexedDB      | Until explicitly deleted | 50MB+      | Asynchronous | Complex data structures, offline apps, large datasets |\n| Cookies        | Based on expiration      | ~4KB       | Synchronous  | Authentication, server-readable data                  |","properties":{}},{"id":"block-43-0","type":"table_row","content":"","properties":{}},{"id":"block-43-1","type":"table_row","content":"","properties":{}},{"id":"block-43-2","type":"table_row","content":"","properties":{}},{"id":"block-43-3","type":"table_row","content":"","properties":{}},{"id":"block-43-4","type":"table_row","content":"","properties":{}},{"id":"block-44","type":"heading_2","content":"Conclusion","properties":{}},{"id":"block-45","type":"paragraph","content":"Understanding these storage options and their appropriate use cases is crucial for building efficient web applications. Each option has its strengths and weaknesses, and choosing the right one depends on your specific requirements regarding data persistence, storage capacity, and performance considerations.","properties":{}},{"id":"block-46","type":"paragraph","content":"For simple data that needs to persist, LocalStorage is often the easiest solution. For temporary session data, SessionStorage works well. When dealing with complex or large amounts of data, IndexedDB is your best bet. And for cases where the server needs access to the data with each request, cookies remain the go-to option.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"April 6, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","JavaScript",{"className":"post-tag","children":["#","JavaScript"]}],["$","span","localstorage",{"className":"post-tag","children":["#","localstorage"]}]]}]]}]]}]]}]}]
