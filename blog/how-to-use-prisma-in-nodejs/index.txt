3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","how-to-use-prisma-in-nodejs","d"]
0:["0g6-DdncezwhR2tyQEXFZ",[[["",{"children":["blog",{"children":[["slug","how-to-use-prisma-in-nodejs","d"],{"children":["__PAGE__?{\"slug\":\"how-to-use-prisma-in-nodejs\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","how-to-use-prisma-in-nodejs","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"How to Use Prisma as an ORM in Node.js Projects"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"When working with databases in Node.js, using an Object-Relational Mapping (ORM) tool like Prisma can simplify your workflow, make your code more readable, and reduce bugs. Prisma is a modern ORM that supports TypeScript out of the box, provides a declarative schema, and generates type-safe queries.","properties":{}},{"id":"block-1","type":"heading_2","content":"What is Prisma?","properties":{}},{"id":"block-2","type":"paragraph","content":"Prisma is an open-source next-generation ORM that helps you query your database in a type-safe way. Unlike traditional ORMs, Prisma uses a schema file to model your data and generate a tailored client.","properties":{}},{"id":"block-3","type":"heading_2","content":"Why Use Prisma?","properties":{}},{"id":"block-4","type":"bulleted_list_item","content":"- **Type safety**: You get autocompletion and compile-time checks","properties":{}},{"id":"block-5","type":"bulleted_list_item","content":"- **Productivity**: Define your models once and let Prisma generate the client","properties":{}},{"id":"block-6","type":"bulleted_list_item","content":"- **Maintainability**: Clear separation between schema, migrations, and code","properties":{}},{"id":"block-7","type":"bulleted_list_item","content":"- **Support for major databases**: PostgreSQL, MySQL, SQLite, SQL Server, MongoDB","properties":{}},{"id":"block-8","type":"divider","content":"---","properties":{}},{"id":"block-9","type":"heading_2","content":"Installation","properties":{}},{"id":"block-10","type":"paragraph","content":"Start by installing Prisma in your Node.js project:","properties":{}},{"id":"block-11","type":"code","content":"```shell\n`\nnpm install prisma --save-dev\nnpm install @prisma/client\n`\n```","properties":{"language":"$undefined"}},{"id":"block-12","type":"paragraph","content":"Initialize Prisma in your project:","properties":{}},{"id":"block-13","type":"code","content":"```shell\n`\nnpx prisma init\n`\n```","properties":{"language":"$undefined"}},{"id":"block-14","type":"paragraph","content":"This creates a `prisma/schema.prisma` file and a `.env` file for your database credentials.","properties":{}},{"id":"block-15","type":"divider","content":"---","properties":{}},{"id":"block-16","type":"heading_2","content":"Defining Your Schema","properties":{}},{"id":"block-17","type":"paragraph","content":"Letâ€™s define a simple `User` model:","properties":{}},{"id":"block-18","type":"code","content":"```javascript\n`\n// prisma/schema.prisma\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        Int      @id @default(autoincrement())\n  email     String   @unique\n  name      String?\n  createdAt DateTime @default(now())\n}\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-19","type":"paragraph","content":"Then generate the Prisma client:","properties":{}},{"id":"block-20","type":"code","content":"```shell\n`\nnpx prisma generate\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-21","type":"divider","content":"---","properties":{}},{"id":"block-22","type":"heading_2","content":"Applying Migrations","properties":{}},{"id":"block-23","type":"paragraph","content":"To create the initial database tables:","properties":{}},{"id":"block-24","type":"code","content":"```shell\n`\nnpx prisma migrate dev --name init\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-25","type":"paragraph","content":"This generates and applies a migration based on your schema.","properties":{}},{"id":"block-26","type":"divider","content":"---","properties":{}},{"id":"block-27","type":"heading_2","content":"Using Prisma Client","properties":{}},{"id":"block-28","type":"paragraph","content":"You can now use the generated Prisma Client to interact with your database:","properties":{}},{"id":"block-29","type":"code","content":"```javascript\n`\n// src/index.js\nconst { PrismaClient } = require('@prisma/client');\nconst prisma = new PrismaClient();\n\nasync function main() {\n  const user = await prisma.user.create({\n    data: {\n      email: 'jane.doe@example.com',\n      name: 'Jane Doe',\n    },\n  });\n\n  console.log('New user:', user);\n\n  const users = await prisma.user.findMany();\n  console.log('All users:', users);\n}\n\nmain()\n  .catch((e) => {\n    throw e;\n  })\n  .finally(async () => {\n    await prisma.$disconnect();\n  });\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-30","type":"divider","content":"---","properties":{}},{"id":"block-31","type":"heading_2","content":"Example Query Patterns","properties":{}},{"id":"block-32","type":"bulleted_list_item","content":"- **Create**:","properties":{}},{"id":"block-33","type":"code","content":"```javascript\n`\nawait prisma.user.create({ data: { email: 'a@example.com' } });\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-34","type":"bulleted_list_item","content":"- **Read**:","properties":{}},{"id":"block-35","type":"code","content":"```javascript\n`\nawait prisma.user.findUnique({ where: { id: 1 } });\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-36","type":"bulleted_list_item","content":"- **Update**:","properties":{}},{"id":"block-37","type":"code","content":"```javascript\n`\nawait prisma.user.update({\n  where: { id: 1 },\n  data: { name: 'Updated Name' },\n});\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-38","type":"bulleted_list_item","content":"- **Delete**:","properties":{}},{"id":"block-39","type":"code","content":"```javascript\n`\nawait prisma.user.delete({ where: { id: 1 } });\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-40","type":"divider","content":"---","properties":{}},{"id":"block-41","type":"heading_2","content":"Using Prisma with TypeScript","properties":{}},{"id":"block-42","type":"paragraph","content":"Prisma works great with TypeScript out of the box. Just use `.ts` files instead of `.js`, and youâ€™ll get full type support for your models and queries.","properties":{}},{"id":"block-43","type":"paragraph","content":"Example:","properties":{}},{"id":"block-44","type":"code","content":"```javascript\n`\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\nasync function getUsers() {\n  const users = await prisma.user.findMany();\n  return users;\n}\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-45","type":"divider","content":"---","properties":{}},{"id":"block-46","type":"heading_2","content":"Conclusion","properties":{}},{"id":"block-47","type":"paragraph","content":"Prisma is a powerful and modern ORM for Node.js that simplifies database access with type safety and clean syntax. Whether you're building small applications or large-scale backends, Prisma helps you stay productive and maintainable. Try it in your next projectâ€”you might not want to go back.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"May 10, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","prisma",{"className":"post-tag","children":["#","prisma"]}],["$","span","TypeScript",{"className":"post-tag","children":["#","TypeScript"]}],["$","span","Node.js",{"className":"post-tag","children":["#","Node.js"]}]]}]]}]]}]]}]}]
