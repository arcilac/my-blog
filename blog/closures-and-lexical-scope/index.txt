3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","closures-and-lexical-scope","d"]
0:["2qmWCf6pyIsm5Xv15HEy9",[[["",{"children":["blog",{"children":[["slug","closures-and-lexical-scope","d"],{"children":["__PAGE__?{\"slug\":\"closures-and-lexical-scope\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","closures-and-lexical-scope","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"Closures and Lexical Scope"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"heading_1","content":"How They Create Private Variables and Maintain State","properties":{}},{"id":"block-1","type":"heading_2","content":"Introduction to Closures and Lexical Scope","properties":{}},{"id":"block-2","type":"paragraph","content":"Closures are a fundamental concept in JavaScript that allow functions to access variables from an outer function even after that outer function has finished executing. Combined with **lexical scope**—the idea that scope is determined by the physical placement of code—closures provide powerful ways to preserve state and create private variables.","properties":{}},{"id":"block-3","type":"heading_2","content":"What Is Lexical Scope?","properties":{}},{"id":"block-4","type":"paragraph","content":"Lexical scope means that the scope of a variable is defined by its position in the source code. Inner functions have access to variables declared in their outer (enclosing) functions.","properties":{}},{"id":"block-5","type":"heading_3","content":"Example:","properties":{}},{"id":"block-6","type":"code","content":"```javascript\n`\nfunction outer() {\n  let name = 'JavaScript';\n\n  function inner() {\n    console.log(name); // Accessible due to lexical scope\n  }\n\n  inner();\n}\n\nouter(); // Output: JavaScript\n`\n```","properties":{"language":"$undefined"}},{"id":"block-7","type":"heading_2","content":"What Is a Closure?","properties":{}},{"id":"block-8","type":"paragraph","content":"A closure is formed when a function retains access to its lexical scope even when the outer function has finished executing.","properties":{}},{"id":"block-9","type":"heading_3","content":"Closure Example:","properties":{}},{"id":"block-10","type":"code","content":"```javascript\n`\nfunction createCounter() {\n  let count = 0;\n\n  return function () {\n    count++;\n    return count;\n  };\n}\n\nconst counter = createCounter();\nconsole.log(counter()); // Output: 1\nconsole.log(counter()); // Output: 2\n`\n```","properties":{"language":"$undefined"}},{"id":"block-11","type":"paragraph","content":"In this example, `count` is a private variable that persists between calls to `counter()` because of the closure.","properties":{}},{"id":"block-12","type":"heading_2","content":"Advantages of Closures","properties":{}},{"id":"block-13","type":"numbered_list_item","content":"1. **Data Privacy**: Variables inside closures are not accessible from outside, creating private state.","properties":{}},{"id":"block-14","type":"numbered_list_item","content":"2. **Stateful Functions**: Useful for functions that need to retain state across invocations.","properties":{}},{"id":"block-15","type":"numbered_list_item","content":"3. **Encapsulation**: Helps group related data and behavior together.","properties":{}},{"id":"block-16","type":"numbered_list_item","content":"4. **Functional Patterns**: Enables advanced techniques like function factories and currying.","properties":{}},{"id":"block-17","type":"heading_2","content":"Creating Private Variables with Closures","properties":{}},{"id":"block-18","type":"paragraph","content":"Closures are often used to encapsulate variables and expose only the desired functionality:","properties":{}},{"id":"block-19","type":"code","content":"```javascript\n`\nfunction secretHolder(secret) {\n  return {\n    getSecret: function () {\n      return secret;\n    },\n    setSecret: function (newSecret) {\n      secret = newSecret;\n    }\n  };\n}\n\nconst holder = secretHolder('initial');\nconsole.log(holder.getSecret()); // Output: initial\nholder.setSecret('updated');\nconsole.log(holder.getSecret()); // Output: updated\n`\n```","properties":{"language":"$undefined"}},{"id":"block-20","type":"heading_2","content":"Conclusion","properties":{}},{"id":"block-21","type":"paragraph","content":"Closures and lexical scope are essential tools in JavaScript. They allow you to write safer, more modular code by preserving state and protecting variables from being accessed or modified unexpectedly. Mastering closures will improve your ability to build complex and maintainable JavaScript applications.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"April 25, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","closures",{"className":"post-tag","children":["#","closures"]}],["$","span","lexical-scope",{"className":"post-tag","children":["#","lexical-scope"]}]]}]]}]]}]]}]}]
