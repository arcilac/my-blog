3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","browser-storage-options","d"]
0:["954LdPQaywTCKaBHNCQQo",[[["",{"children":["blog",{"children":[["slug","browser-storage-options","d"],{"children":["__PAGE__?{\"slug\":\"browser-storage-options\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","browser-storage-options","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
b:T4eb,| Feature                  | LocalStorage           | SessionStorage     | IndexedDB              | Cookies                 |
| ------------------------ | ---------------------- | ------------------ | ---------------------- | ----------------------- |
| **Persistence**          | Until manually cleared | Tab/window session | Until manually cleared | Configurable expiration |
| **Capacity**             | ~5-10MB                | ~5-10MB            | Generally >50MB        | ~4KB per cookie         |
| **API Type**             | Synchronous            | Synchronous        | Asynchronous           | Synchronous             |
| **Complexity**           | Simple                 | Simple             | Complex                | Moderate                |
| **Data Types**           | Strings only           | Strings only       | Most JS types + Files  | Strings only            |
| **Auto-sends to Server** | No                     | No                 | No                     | Yes                     |
| **Access from Server**   | No                     | No                 | No                     | Yes                     |
| **Expiration Control**   | No                     | Auto (session)     | No                     | Yes                     |c:Tbe3,```javascript
`
// Storage utility class
class StorageManager {
  // For small, frequently accessed preferences
  static setPreference(key, value) {
    localStorage.setItem(`pref_${key}`, JSON.stringify(value));
  }

  static getPreference(key) {
    const item = localStorage.getItem(`pref_${key}`);
    return item ? JSON.parse(item) : null;
  }

  // For session-specific data
  static setSessionData(key, value) {
    sessionStorage.setItem(`session_${key}`, JSON.stringify(value));
  }

  static getSessionData(key) {
    const item = sessionStorage.getItem(`session_${key}`);
    return item ? JSON.parse(item) : null;
  }

  // For large datasets
  static openDatabase() {
    return new Promise((resolve, reject) => {
      const request = indexedDB.open('AppDatabase', 1);

      request.onupgradeneeded = (event) => {
        const db = event.target.result;
        // Create object stores as needed
        if (!db.objectStoreNames.contains('items')) {
          db.createObjectStore('items', { keyPath: 'id' });
        }
      };

      request.onsuccess = (event) => resolve(event.target.result);
      request.onerror = (event) => reject(event.target.error);
    });
  }

  static async saveToDatabase(storeName, item) {
    const db = await this.openDatabase();
    return new Promise((resolve, reject) => {
      const transaction = db.transaction([storeName], 'readwrite');
      const store = transaction.objectStore(storeName);
      const request = store.put(item);

      request.onsuccess = () => resolve(request.result);
      request.onerror = () => reject(request.error);

      transaction.oncomplete = () => db.close();
    });
  }

  static async getFromDatabase(storeName, id) {
    const db = await this.openDatabase();
    return new Promise((resolve, reject) => {
      const transaction = db.transaction([storeName], 'readonly');
      const store = transaction.objectStore(storeName);
      const request = store.get(id);

      request.onsuccess = () => resolve(request.result);
      request.onerror = () => reject(request.error);

      transaction.oncomplete = () => db.close();
    });
  }

  // For authentication
  static setCookie(name, value, days, secure = true, sameSite = 'Strict') {
    let expires = '';
    if (days) {
      const date = new Date();
      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
      expires = `; expires=${date.toUTCString()}`;
    }

    const secureFlag = secure ? '; Secure' : '';
    document.cookie = `${name}=${value}${expires}; path=/; SameSite=${sameSite}${secureFlag}`;
  }

  static getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
  }
}

// Usage examples
StorageManager.setPreference('theme', 'dark');
StorageManager.setSessionData('currentPage', 'dashboard');
StorageManager.saveToDatabase('items', { id: 1, name: 'Product', price: 29.99 });
StorageManager.setCookie('sessionId', 'abc123', 1);
`
```2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"Browser Storage Options"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"heading_1","content":"A Comprehensive Guide","properties":{}},{"id":"block-1","type":"paragraph","content":"In modern web development, managing data on the client side is crucial for creating responsive, offline-capable, and personalized web applications. Browsers offer several storage mechanisms, each with its own strengths, limitations, and use cases. This guide explores the four main browser storage options: LocalStorage, SessionStorage, IndexedDB, and Cookies.","properties":{}},{"id":"block-2","type":"heading_2","content":"LocalStorage","properties":{}},{"id":"block-3","type":"paragraph","content":"LocalStorage provides a simple key-value store that persists across browser sessions and remains available until explicitly cleared.","properties":{}},{"id":"block-4","type":"heading_3","content":"Key Features","properties":{}},{"id":"block-5","type":"bulleted_list_item","content":"- **Persistence**: Data remains available even after closing and reopening the browser","properties":{}},{"id":"block-6","type":"bulleted_list_item","content":"- **Storage Capacity**: Typically 5-10MB depending on the browser","properties":{}},{"id":"block-7","type":"bulleted_list_item","content":"- **Synchronous API**: Easy to use but can block the main thread","properties":{}},{"id":"block-8","type":"bulleted_list_item","content":"- **Same-Origin Policy**: Only accessible by pages from the same origin (domain, protocol, and port)","properties":{}},{"id":"block-9","type":"bulleted_list_item","content":"- **String Only**: All values are stored as strings","properties":{}},{"id":"block-10","type":"heading_3","content":"Basic Usage","properties":{}},{"id":"block-11","type":"code","content":"```javascript\n`\n// Storing data\nlocalStorage.setItem('username', 'JohnDoe');\nlocalStorage.setItem('preferences', JSON.stringify({\n  theme: 'dark',\n  fontSize: 16\n}));\n\n// Retrieving data\nconst username = localStorage.getItem('username');\nconst preferences = JSON.parse(localStorage.getItem('preferences'));\n\n// Removing specific item\nlocalStorage.removeItem('username');\n\n// Clearing all data\nlocalStorage.clear();\n`\n```","properties":{"language":"$undefined"}},{"id":"block-12","type":"heading_3","content":"Best Use Cases","properties":{}},{"id":"block-13","type":"bulleted_list_item","content":"- User preferences (theme, language settings)","properties":{}},{"id":"block-14","type":"bulleted_list_item","content":"- Non-sensitive form data","properties":{}},{"id":"block-15","type":"bulleted_list_item","content":"- Shopping cart contents","properties":{}},{"id":"block-16","type":"bulleted_list_item","content":"- Cached data that should persist across sessions","properties":{}},{"id":"block-17","type":"heading_2","content":"SessionStorage","properties":{}},{"id":"block-18","type":"paragraph","content":"SessionStorage is similar to LocalStorage but with a key difference: data is only available for the duration of the page session.","properties":{}},{"id":"block-19","type":"heading_3","content":"Key Features","properties":{}},{"id":"block-20","type":"bulleted_list_item","content":"- **Session-limited**: Data is cleared when the page session ends (tab/window closes)","properties":{}},{"id":"block-21","type":"bulleted_list_item","content":"- **Storage Capacity**: Similar to LocalStorage (5-10MB)","properties":{}},{"id":"block-22","type":"bulleted_list_item","content":"- **Synchronous API**: Like LocalStorage","properties":{}},{"id":"block-23","type":"bulleted_list_item","content":"- **Same-Origin Policy**: Same as LocalStorage","properties":{}},{"id":"block-24","type":"bulleted_list_item","content":"- **String Only**: All values are stored as strings","properties":{}},{"id":"block-25","type":"heading_3","content":"Basic Usage","properties":{}},{"id":"block-26","type":"code","content":"```javascript\n`\n// Storing data\nsessionStorage.setItem('temporaryToken', 'abc123');\nsessionStorage.setItem('recentSearches', JSON.stringify(['query1', 'query2']));\n\n// Retrieving data\nconst token = sessionStorage.getItem('temporaryToken');\nconst searches = JSON.parse(sessionStorage.getItem('recentSearches'));\n\n// Removing specific item\nsessionStorage.removeItem('temporaryToken');\n\n// Clearing all data\nsessionStorage.clear();\n`\n```","properties":{"language":"$undefined"}},{"id":"block-27","type":"heading_3","content":"Best Use Cases","properties":{}},{"id":"block-28","type":"bulleted_list_item","content":"- Form data during multi-step processes","properties":{}},{"id":"block-29","type":"bulleted_list_item","content":"- Session-specific state","properties":{}},{"id":"block-30","type":"bulleted_list_item","content":"- Temporary authentication tokens","properties":{}},{"id":"block-31","type":"bulleted_list_item","content":"- Recent activity within a single session","properties":{}},{"id":"block-32","type":"heading_2","content":"IndexedDB","properties":{}},{"id":"block-33","type":"paragraph","content":"IndexedDB is a more powerful, low-level API for client-side storage of significant amounts of structured data, including files and blobs.","properties":{}},{"id":"block-34","type":"heading_3","content":"Key Features","properties":{}},{"id":"block-35","type":"bulleted_list_item","content":"- **High Capacity**: Can store much larger amounts of data than LocalStorage/SessionStorage","properties":{}},{"id":"block-36","type":"bulleted_list_item","content":"- **Structured Data**: Supports complex data types (not just strings)","properties":{}},{"id":"block-37","type":"bulleted_list_item","content":"- **Indexed**: Enables efficient searching of stored data","properties":{}},{"id":"block-38","type":"bulleted_list_item","content":"- **Asynchronous API**: Doesn't block the main thread","properties":{}},{"id":"block-39","type":"bulleted_list_item","content":"- **Transaction-based**: Provides reliability through transactions","properties":{}},{"id":"block-40","type":"bulleted_list_item","content":"- **Object Stores**: Similar to tables in relational databases","properties":{}},{"id":"block-41","type":"heading_3","content":"Basic Usage","properties":{}},{"id":"block-42","type":"code","content":"```javascript\n`\n// Opening a database\nconst request = indexedDB.open('MyDatabase', 1);\n\nrequest.onupgradeneeded = function(event) {\n  const db = event.target.result;\n\n  // Create an object store\n  const store = db.createObjectStore('customers', { keyPath: 'id' });\n\n  // Create an index\n  store.createIndex('nameIndex', 'name', { unique: false });\n};\n\nrequest.onsuccess = function(event) {\n  const db = event.target.result;\n\n  // Add data\n  const transaction = db.transaction(['customers'], 'readwrite');\n  const store = transaction.objectStore('customers');\n  store.add({ id: 1, name: 'John Doe', email: 'john@example.com' });\n\n  // Read data\n  const getRequest = store.get(1);\n  getRequest.onsuccess = function(event) {\n    console.log(event.target.result);\n  };\n\n  transaction.oncomplete = function() {\n    db.close();\n  };\n};\n\nrequest.onerror = function(event) {\n  console.error('Database error:', event.target.error);\n};\n`\n```","properties":{"language":"$undefined"}},{"id":"block-43","type":"heading_3","content":"Best Use Cases","properties":{}},{"id":"block-44","type":"bulleted_list_item","content":"- Offline web applications","properties":{}},{"id":"block-45","type":"bulleted_list_item","content":"- Large datasets (product catalogs, user-generated content)","properties":{}},{"id":"block-46","type":"bulleted_list_item","content":"- File or blob storage","properties":{}},{"id":"block-47","type":"bulleted_list_item","content":"- Applications requiring complex data queries","properties":{}},{"id":"block-48","type":"bulleted_list_item","content":"- Client-side caching of API responses","properties":{}},{"id":"block-49","type":"heading_2","content":"Cookies","properties":{}},{"id":"block-50","type":"paragraph","content":"Cookies are the oldest browser storage mechanism, primarily designed for server-client communication but also usable for client-side storage.","properties":{}},{"id":"block-51","type":"heading_3","content":"Key Features","properties":{}},{"id":"block-52","type":"bulleted_list_item","content":"- **Automatic Transmission**: Sent with every HTTP request to the same domain","properties":{}},{"id":"block-53","type":"bulleted_list_item","content":"- **Limited Storage**: Typically 4KB per cookie, maximum of ~50 cookies per domain","properties":{}},{"id":"block-54","type":"bulleted_list_item","content":"- **Expiration Control**: Can set specific expiration dates","properties":{}},{"id":"block-55","type":"bulleted_list_item","content":"- **Path and Domain Constraints**: Can be limited to specific paths within a domain","properties":{}},{"id":"block-56","type":"bulleted_list_item","content":"- **Security Options**: HttpOnly, Secure, and SameSite flags","properties":{}},{"id":"block-57","type":"bulleted_list_item","content":"- **Accessible Server-side**: Can be read by the server, unlike the other options","properties":{}},{"id":"block-58","type":"heading_3","content":"Basic Usage","properties":{}},{"id":"block-59","type":"code","content":"```javascript\n`\n// Setting a cookie\ndocument.cookie = \"username=JohnDoe; expires=Fri, 31 Dec 2023 23:59:59 GMT; path=/; SameSite=Strict\";\n\n// Reading cookies\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\nconst username = getCookie('username');\n\n// Deleting a cookie\ndocument.cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/;\";\n`\n```","properties":{"language":"$undefined"}},{"id":"block-60","type":"heading_3","content":"Best Use Cases","properties":{}},{"id":"block-61","type":"bulleted_list_item","content":"- Session management","properties":{}},{"id":"block-62","type":"bulleted_list_item","content":"- User authentication","properties":{}},{"id":"block-63","type":"bulleted_list_item","content":"- User tracking and analytics","properties":{}},{"id":"block-64","type":"bulleted_list_item","content":"- Server-side personalization","properties":{}},{"id":"block-65","type":"bulleted_list_item","content":"- Remember-me functionality","properties":{}},{"id":"block-66","type":"heading_2","content":"Comparison Chart","properties":{}},{"id":"block-67","type":"table","content":"$b","properties":{}},{"id":"block-67-0","type":"table_row","content":"","properties":{}},{"id":"block-67-1","type":"table_row","content":"","properties":{}},{"id":"block-67-2","type":"table_row","content":"","properties":{}},{"id":"block-67-3","type":"table_row","content":"","properties":{}},{"id":"block-67-4","type":"table_row","content":"","properties":{}},{"id":"block-67-5","type":"table_row","content":"","properties":{}},{"id":"block-67-6","type":"table_row","content":"","properties":{}},{"id":"block-67-7","type":"table_row","content":"","properties":{}},{"id":"block-67-8","type":"table_row","content":"","properties":{}},{"id":"block-68","type":"heading_2","content":"Security Considerations","properties":{}},{"id":"block-69","type":"heading_3","content":"LocalStorage and SessionStorage","properties":{}},{"id":"block-70","type":"bulleted_list_item","content":"- **No HttpOnly Flag**: Vulnerable to XSS attacks","properties":{}},{"id":"block-71","type":"bulleted_list_item","content":"- **No Automatic Expiration**: Data persists indefinitely (LocalStorage)","properties":{}},{"id":"block-72","type":"bulleted_list_item","content":"- **Not Encrypted**: Data stored in plain text","properties":{}},{"id":"block-73","type":"heading_3","content":"IndexedDB","properties":{}},{"id":"block-74","type":"bulleted_list_item","content":"- **Same-Origin Policy Protection**: But still vulnerable to XSS","properties":{}},{"id":"block-75","type":"bulleted_list_item","content":"- **No Built-in Encryption**: Consider encrypting sensitive data","properties":{}},{"id":"block-76","type":"heading_3","content":"Cookies","properties":{}},{"id":"block-77","type":"bulleted_list_item","content":"- **HttpOnly Flag**: Can prevent JavaScript access, mitigating XSS risks","properties":{}},{"id":"block-78","type":"bulleted_list_item","content":"- **Secure Flag**: Ensures transmission only over HTTPS","properties":{}},{"id":"block-79","type":"bulleted_list_item","content":"- **SameSite Attribute**: Protects against CSRF attacks","properties":{}},{"id":"block-80","type":"bulleted_list_item","content":"- **CSRF Vulnerability**: Without proper protection","properties":{}},{"id":"block-81","type":"heading_2","content":"Best Practices","properties":{}},{"id":"block-82","type":"numbered_list_item","content":"1. **Choose the Right Tool**:","properties":{}},{"id":"block-82-0","type":"bulleted_list_item","content":"- Use cookies for authentication tokens that need to be sent to the server","properties":{}},{"id":"block-82-1","type":"bulleted_list_item","content":"- Use sessionStorage for temporary, session-specific data","properties":{}},{"id":"block-82-2","type":"bulleted_list_item","content":"- Use localStorage for persistent but non-sensitive data","properties":{}},{"id":"block-82-3","type":"bulleted_list_item","content":"- Use IndexedDB for complex or large datasets","properties":{}},{"id":"block-83","type":"numbered_list_item","content":"2. **Security Measures**:","properties":{}},{"id":"block-83-0","type":"bulleted_list_item","content":"- Never store sensitive information in client storage without encryption","properties":{}},{"id":"block-83-1","type":"bulleted_list_item","content":"- Implement proper input validation to prevent XSS","properties":{}},{"id":"block-83-2","type":"bulleted_list_item","content":"- Use HttpOnly, Secure, and SameSite flags for cookies","properties":{}},{"id":"block-83-3","type":"bulleted_list_item","content":"- Validate all stored data before use","properties":{}},{"id":"block-84","type":"numbered_list_item","content":"3. **Performance Optimization**:","properties":{}},{"id":"block-84-0","type":"bulleted_list_item","content":"- Minimize localStorage/sessionStorage operations as they block the main thread","properties":{}},{"id":"block-84-1","type":"bulleted_list_item","content":"- Use IndexedDB for large datasets to avoid performance issues","properties":{}},{"id":"block-84-2","type":"bulleted_list_item","content":"- Implement a caching strategy to reduce server calls","properties":{}},{"id":"block-85","type":"numbered_list_item","content":"4. **Handle Storage Limitations**:","properties":{}},{"id":"block-85-0","type":"bulleted_list_item","content":"- Implement storage quota management","properties":{}},{"id":"block-85-1","type":"bulleted_list_item","content":"- Have fallback mechanisms when storage limits are reached","properties":{}},{"id":"block-85-2","type":"bulleted_list_item","content":"- Clean up old or unused data periodically","properties":{}},{"id":"block-86","type":"heading_2","content":"Example: Comprehensive Storage Strategy","properties":{}},{"id":"block-87","type":"paragraph","content":"Here's an example of how you might implement a comprehensive storage strategy for a web application:","properties":{}},{"id":"block-88","type":"code","content":"$c","properties":{"language":"$undefined"}},{"id":"block-89","type":"heading_2","content":"Conclusion","properties":{}},{"id":"block-90","type":"paragraph","content":"Browser storage mechanisms offer a range of options for client-side data management, each with its own strengths and weaknesses. By understanding the characteristics of each option—LocalStorage, SessionStorage, IndexedDB, and Cookies—developers can make informed decisions about which storage method best suits their specific requirements.","properties":{}},{"id":"block-91","type":"paragraph","content":"For simple, persistent data storage, LocalStorage provides an easy-to-use solution. For temporary session data, SessionStorage offers similar functionality with automatic cleanup. For complex or large-scale data requirements, IndexedDB provides a powerful and flexible database system. And for server-client communication and authentication, cookies remain an essential tool.","properties":{}},{"id":"block-92","type":"paragraph","content":"By implementing appropriate security measures and following best practices, developers can leverage these storage options to create web applications that are responsive, personalized, and capable of functioning even when offline.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"April 26, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","localstorage",{"className":"post-tag","children":["#","localstorage"]}],["$","span","sessionstorage",{"className":"post-tag","children":["#","sessionstorage"]}],["$","span","web-development",{"className":"post-tag","children":["#","web-development"]}],["$","span","cookies",{"className":"post-tag","children":["#","cookies"]}]]}]]}]]}]]}]}]
