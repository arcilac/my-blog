3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","react-lazy-loading-images","d"]
0:["6wXH5YfqUDMW6hyUHlale",[[["",{"children":["blog",{"children":[["slug","react-lazy-loading-images","d"],{"children":["__PAGE__?{\"slug\":\"react-lazy-loading-images\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","react-lazy-loading-images","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"How to Implement Lazy Loading for Images in React"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"Loading all images at once can slow down your app, especially on image-heavy pages. **Lazy loading** helps by deferring the loading of images until theyâ€™re actually visible in the viewport. This optimization improves performance, especially for users on slow networks or mobile devices.","properties":{}},{"id":"block-1","type":"paragraph","content":"Letâ€™s explore how to implement lazy loading in React using modern and easy-to-use techniques.","properties":{}},{"id":"block-2","type":"divider","content":"---","properties":{}},{"id":"block-3","type":"heading_2","content":"ðŸš€ What is Lazy Loading?","properties":{}},{"id":"block-4","type":"paragraph","content":"Lazy loading means **delaying the loading of non-critical resources**â€”like imagesâ€”until the user needs them. For images, it means loading them **only when they appear in the viewport** (i.e., when the user scrolls to them).","properties":{}},{"id":"block-5","type":"paragraph","content":"Benefits:","properties":{}},{"id":"block-6","type":"bulleted_list_item","content":"- Faster initial page load","properties":{}},{"id":"block-7","type":"bulleted_list_item","content":"- Less bandwidth usage","properties":{}},{"id":"block-8","type":"bulleted_list_item","content":"- Better user experience","properties":{}},{"id":"block-9","type":"divider","content":"---","properties":{}},{"id":"block-10","type":"heading_2","content":"ðŸ§° Option 1: Native HTML `loading=\"lazy\"`","properties":{}},{"id":"block-11","type":"paragraph","content":"Modern browsers support native lazy loading using the `loading` attribute:","properties":{}},{"id":"block-12","type":"code","content":"```javascript\n`\n<img src=\"photo.jpg\" alt=\"Description\" loading=\"lazy\" />\n`\n```","properties":{"language":"$undefined"}},{"id":"block-13","type":"paragraph","content":"This works out of the box in most browsers and is perfect for simple use cases. But if you need **more control**, use the next approach.","properties":{}},{"id":"block-14","type":"divider","content":"---","properties":{}},{"id":"block-15","type":"heading_2","content":"ðŸ§  Option 2: Lazy Loading with `IntersectionObserver`","properties":{}},{"id":"block-16","type":"paragraph","content":"You can use the `IntersectionObserver` API to detect when an image enters the viewport and load it dynamically.","properties":{}},{"id":"block-17","type":"paragraph","content":"Hereâ€™s a basic custom `LazyImage` component:","properties":{}},{"id":"block-18","type":"code","content":"```javascript\n`\nimport React, { useRef, useState, useEffect } from 'react';\n\nconst LazyImage = ({ src, alt, ...props }) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const imageRef = useRef();\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          observer.disconnect(); // Stop observing after loading\n        }\n      },\n      {\n        threshold: 0.1,\n      }\n    );\n\n    if (imageRef.current) {\n      observer.observe(imageRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <imgref={imageRef}\n      src={isVisible ? src : ''}\n      alt={alt}\n      {...props}\n    />\n  );\n};\n\nexport default LazyImage;\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-19","type":"heading_3","content":"Usage","properties":{}},{"id":"block-20","type":"code","content":"```javascript\n`\n<LazyImage src=\"/images/large-photo.jpg\" alt=\"A beautiful landscape\" />\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-21","type":"paragraph","content":"This way, images wonâ€™t load until they are in (or close to) view.","properties":{}},{"id":"block-22","type":"divider","content":"---","properties":{}},{"id":"block-23","type":"heading_2","content":"âœ¨ Optional: Add a Placeholder or Blur Effect","properties":{}},{"id":"block-24","type":"paragraph","content":"To enhance UX, show a low-quality placeholder or a blurred version before the actual image loads.","properties":{}},{"id":"block-25","type":"paragraph","content":"Hereâ€™s a quick extension to the `LazyImage` component:","properties":{}},{"id":"block-26","type":"code","content":"```javascript\n`\nreturn (\n  <imgref={imageRef}\n    src={isVisible ? src : '/images/placeholder.jpg'}\n    alt={alt}\n    className={isVisible ? 'fade-in' : 'blur'}\n    {...props}\n  />\n);\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-27","type":"paragraph","content":"And in your CSS:","properties":{}},{"id":"block-28","type":"code","content":"```css\n`\n.blur {\n  filter: blur(10px);\n  transition: filter 0.3s ease-out;\n}\n\n.fade-in {\n  filter: none;\n}\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-29","type":"divider","content":"---","properties":{}},{"id":"block-30","type":"heading_2","content":"ðŸ§± Alternative: Use Libraries","properties":{}},{"id":"block-31","type":"paragraph","content":"If you prefer not to reinvent the wheel, try these libraries:","properties":{}},{"id":"block-32","type":"bulleted_list_item","content":"- [`react-lazy-load-image-component`](https://www.npmjs.com/package/react-lazy-load-image-component)","properties":{}},{"id":"block-33","type":"bulleted_list_item","content":"- [`react-intersection-observer`](https://www.npmjs.com/package/react-intersection-observer)","properties":{}},{"id":"block-34","type":"paragraph","content":"Example with `react-lazy-load-image-component`:","properties":{}},{"id":"block-35","type":"code","content":"```shell\n`\nnpm install react-lazy-load-image-component\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-36","type":"code","content":"```javascript\n`\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n<LazyLoadImagesrc=\"photo.jpg\"\n  alt=\"Lazy loaded\"\n  effect=\"blur\"\n/>\n`\n```","properties":{"language":"$undefined"}},{"id":"block-37","type":"paragraph","content":"It adds built-in effects and handles observer setup internally.","properties":{}},{"id":"block-38","type":"divider","content":"---","properties":{}},{"id":"block-39","type":"heading_2","content":"âœ… Summary","properties":{}},{"id":"block-40","type":"table","content":"| Technique                         | Pros                         | Best For                         |\n| --------------------------------- | ---------------------------- | -------------------------------- |\n| `loading=\"lazy\"`                  | Simple and native            | Basic use cases                  |\n| `IntersectionObserver`            | Fine-grained control         | Custom UX, animations, fallback  |\n| `react-lazy-load-image-component` | Feature-rich and easy to use | Production apps with many images |","properties":{}},{"id":"block-40-0","type":"table_row","content":"","properties":{}},{"id":"block-40-1","type":"table_row","content":"","properties":{}},{"id":"block-40-2","type":"table_row","content":"","properties":{}},{"id":"block-40-3","type":"table_row","content":"","properties":{}},{"id":"block-41","type":"divider","content":"---","properties":{}},{"id":"block-42","type":"heading_2","content":"ðŸ“Œ Conclusion","properties":{}},{"id":"block-43","type":"paragraph","content":"Implementing lazy loading in React is a small change that can deliver **big performance gains**. Whether you go with the native `loading` attribute or a custom solution using `IntersectionObserver`, your users will benefit from faster load times and smoother experiences.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"May 17, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","react",{"className":"post-tag","children":["#","react"]}],["$","span","Lazy Loading",{"className":"post-tag","children":["#","Lazy Loading"]}]]}]]}]]}]]}]}]
