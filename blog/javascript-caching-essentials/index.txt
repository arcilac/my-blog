3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","javascript-caching-essentials","d"]
0:["LXoFdDmkAMJf6BvMbuuFj",[[["",{"children":["blog",{"children":[["slug","javascript-caching-essentials","d"],{"children":["__PAGE__?{\"slug\":\"javascript-caching-essentials\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","javascript-caching-essentials","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"JavaScript Caching: The Essential Guide"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"In modern web development, performance can make or break your application. Caching is one of the most effective ways to improve performance. Let's explore how JavaScript developers can leverage caching techniques to create faster, more responsive applications.","properties":{}},{"id":"block-1","type":"heading_2","content":"üöÄ What Is Caching?","properties":{}},{"id":"block-2","type":"paragraph","content":"Caching is the process of storing copies of data temporarily so future requests for that data can be served faster. Instead of regenerating the same data repeatedly, your application retrieves it from the cache‚Äîdramatically reducing load times and processing power.","properties":{}},{"id":"block-3","type":"heading_2","content":"‚öôÔ∏è Types of Caching in JavaScript Applications","properties":{}},{"id":"block-4","type":"heading_3","content":"Browser Caching","properties":{}},{"id":"block-5","type":"paragraph","content":"Modern browsers automatically cache resources like JavaScript files, CSS, and images based on HTTP headers.","properties":{}},{"id":"block-6","type":"heading_3","content":"Memory Caching","properties":{}},{"id":"block-7","type":"paragraph","content":"Storing data in variables during runtime:","properties":{}},{"id":"block-8","type":"code","content":"```javascript\n`\n// Simple in-memory cache\nconst memoryCache = {\n  data: {},\n\n  get(key) {\n    const item = this.data[key];\n    if (!item) return null;\n\n    // Check expiration\n    if (item.expiry && item.expiry < Date.now()) {\n      delete this.data[key];\n      return null;\n    }\n\n    return item.value;\n  },\n\n  set(key, value, ttlSeconds = 3600) {\n    const expiry = ttlSeconds ? Date.now() + (ttlSeconds * 1000) : null;\n    this.data[key] = { value, expiry };\n  }\n};\n\n// Usage\nmemoryCache.set('user:123', { name: 'John' }, 300); // Cache for 5 minutes\nconst user = memoryCache.get('user:123');\n`\n```","properties":{"language":"$undefined"}},{"id":"block-9","type":"heading_3","content":"Storage Caching","properties":{}},{"id":"block-10","type":"paragraph","content":"Using localStorage or sessionStorage for persistence between page loads:","properties":{}},{"id":"block-11","type":"code","content":"```javascript\n`\n// Store data with expiration\nfunction storeWithExpiry(key, value, ttlSeconds) {\n  const item = {\n    value: value,\n    expiry: Date.now() + (ttlSeconds * 1000)\n  };\n  localStorage.setItem(key, JSON.stringify(item));\n}\n\n// Get data with expiry check\nfunction getWithExpiry(key) {\n  const itemStr = localStorage.getItem(key);\n  if (!itemStr) return null;\n\n  const item = JSON.parse(itemStr);\n  if (Date.now() > item.expiry) {\n    localStorage.removeItem(key);\n    return null;\n  }\n  return item.value;\n}\n\n// Usage\nstoreWithExpiry('userPrefs', { theme: 'dark' }, 86400); // 24 hours\nconst prefs = getWithExpiry('userPrefs');\n`\n```","properties":{"language":"$undefined"}},{"id":"block-12","type":"heading_3","content":"Service Worker Caching","properties":{}},{"id":"block-13","type":"paragraph","content":"Intercept network requests for offline support:","properties":{}},{"id":"block-14","type":"code","content":"```javascript\n`\n// In service-worker.js\nconst CACHE_NAME = 'app-v1';\n\nself.addEventListener('install', event => {\n  event.waitUntil(\n    caches.open(CACHE_NAME).then(cache => {\n      return cache.addAll([\n        '/',\n        '/index.html',\n        '/styles.css',\n        '/app.js'\n      ]);\n    })\n  );\n});\n\nself.addEventListener('fetch', event => {\n  event.respondWith(\n    caches.match(event.request).then(response => {\n      return response || fetch(event.request).then(fetchResponse => {\n        // Cache the fetched response\n        if (fetchResponse.status === 200) {\n          const responseToCache = fetchResponse.clone();\n          caches.open(CACHE_NAME).then(cache => {\n            cache.put(event.request, responseToCache);\n          });\n        }\n        return fetchResponse;\n      });\n    })\n  );\n});\n`\n```","properties":{"language":"$undefined"}},{"id":"block-15","type":"heading_2","content":"üéØ Key Caching Strategies","properties":{}},{"id":"block-16","type":"heading_3","content":"1. Memoization","properties":{}},{"id":"block-17","type":"paragraph","content":"Cache function results based on input parameters:","properties":{}},{"id":"block-18","type":"code","content":"```javascript\n`\nfunction memoize(fn) {\n  const cache = new Map();\n\n  return function(...args) {\n    const key = JSON.stringify(args);\n    if (cache.has(key)) return cache.get(key);\n\n    const result = fn.apply(this, args);\n    cache.set(key, result);\n    return result;\n  };\n}\n\n// Example\nconst slowFibonacci = n => {\n  if (n <= 1) return n;\n  return slowFibonacci(n-1) + slowFibonacci(n-2);\n};\n\nconst fastFibonacci = memoize(slowFibonacci);\n// Second call is much faster\nconsole.time('First'); fastFibonacci(40); console.timeEnd('First');\nconsole.time('Second'); fastFibonacci(40); console.timeEnd('Second');\n`\n```","properties":{"language":"$undefined"}},{"id":"block-19","type":"heading_3","content":"2. HTTP Caching","properties":{}},{"id":"block-20","type":"paragraph","content":"Control browser caching with fetch options:","properties":{}},{"id":"block-21","type":"code","content":"```javascript\n`\n// Using cache control with fetch\nfetch('/api/data', {\n  cache: 'force-cache' // Use 'no-cache', 'reload', 'force-cache', or 'only-if-cached'\n})\n.then(response => response.json())\n.then(data => console.log(data));\n`\n```","properties":{"language":"$undefined"}},{"id":"block-22","type":"heading_3","content":"3. Cache-Then-Network","properties":{}},{"id":"block-23","type":"paragraph","content":"Provide instant feedback while fetching fresh data:","properties":{}},{"id":"block-24","type":"code","content":"```javascript\n`\nasync function fetchWithCacheThenNetwork(url, callback) {\n  // Check cache first\n  const cachedData = localStorage.getItem(url);\n  if (cachedData) {\n    callback(JSON.parse(cachedData), 'cache');\n  }\n\n  // Then fetch fresh data\n  try {\n    const response = await fetch(url);\n    const freshData = await response.json();\n    localStorage.setItem(url, JSON.stringify(freshData));\n\n    // Only update UI if data changed\n    if (!cachedData || JSON.stringify(freshData) !== cachedData) {\n      callback(freshData, 'network');\n    }\n  } catch (error) {\n    console.error('Network fetch failed:', error);\n  }\n}\n`\n```","properties":{"language":"$undefined"}},{"id":"block-25","type":"heading_2","content":"üß© Framework-Specific Caching","properties":{}},{"id":"block-26","type":"heading_3","content":"React Caching","properties":{}},{"id":"block-27","type":"paragraph","content":"Use React's built-in optimization features:","properties":{}},{"id":"block-28","type":"code","content":"```javascript\n`\nimport React, { useMemo, useState } from 'react';\n\nfunction ExpensiveComponent({ data, filter }) {\n  // Cached calculation\n  const filteredData = useMemo(() => {\n    console.log('Filtering...');\n    return data.filter(item => item.name.includes(filter));\n  }, [data, filter]); // Only recalculate when dependencies change\n\n  return (\n    <ul>\n      {filteredData.map(item => (\n        <li key={item.id}>{item.name}</li>\n      ))}\n    </ul>\n  );\n}\n`\n```","properties":{"language":"$undefined"}},{"id":"block-29","type":"heading_3","content":"API Caching with React Query","properties":{}},{"id":"block-30","type":"paragraph","content":"Manage server state with automatic caching:","properties":{}},{"id":"block-31","type":"code","content":"```javascript\n`\nimport { useQuery } from 'react-query';\n\nfunction Products() {\n  const { data, isLoading } = useQuery('products',\n    () => fetch('/api/products').then(res => res.json()),\n    {\n      staleTime: 60000, // Consider data fresh for 1 minute\n      cacheTime: 300000 // Keep cached data for 5 minutes\n    }\n  );\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <ul>\n      {data.map(product => (\n        <li key={product.id}>{product.name}</li>\n      ))}\n    </ul>\n  );\n}\n`\n```","properties":{"language":"$undefined"}},{"id":"block-32","type":"heading_2","content":"‚ö° Server-Side Caching with Node.js","properties":{}},{"id":"block-33","type":"paragraph","content":"For fullstack JavaScript developers:","properties":{}},{"id":"block-34","type":"code","content":"```javascript\n`\nconst express = require('express');\nconst NodeCache = require('node-cache');\nconst app = express();\nconst cache = new NodeCache({ stdTTL: 300 }); // 5-minute default TTL\n\n// Cache middleware\nfunction cacheMiddleware(duration) {\n  return (req, res, next) => {\n    if (req.method !== 'GET') return next();\n\n    const key = req.originalUrl;\n    const cachedResponse = cache.get(key);\n\n    if (cachedResponse) {\n      return res.send(cachedResponse);\n    }\n\n    res.originalSend = res.send;\n    res.send = function(body) {\n      cache.set(key, body, duration);\n      res.originalSend(body);\n    };\n    next();\n  };\n}\n\n// Apply to routes\napp.get('/api/users', cacheMiddleware(60), (req, res) => {\n  // Expensive database operation\n  getUsers().then(users => res.json(users));\n});\n`\n```","properties":{"language":"$undefined"}},{"id":"block-35","type":"heading_2","content":"üö´ When Not to Cache","properties":{}},{"id":"block-36","type":"paragraph","content":"Caching isn't always appropriate:","properties":{}},{"id":"block-37","type":"bulleted_list_item","content":"- For frequently changing data","properties":{}},{"id":"block-38","type":"bulleted_list_item","content":"- For user-specific sensitive information","properties":{}},{"id":"block-39","type":"bulleted_list_item","content":"- When perfect data consistency is critical","properties":{}},{"id":"block-40","type":"bulleted_list_item","content":"- For data that's cheaper to compute than to store","properties":{}},{"id":"block-41","type":"heading_2","content":"‚úÖ Caching Best Practices","properties":{}},{"id":"block-42","type":"paragraph","content":"‚úÖ **Set appropriate TTL (Time To Live)** - Match cache duration to data volatility","properties":{}},{"id":"block-43","type":"paragraph","content":"‚úÖ **Implement cache invalidation** - Clear cache when data changes","properties":{}},{"id":"block-44","type":"paragraph","content":"‚úÖ **Use cache versioning** - Add version numbers to cache keys for easy updates","properties":{}},{"id":"block-45","type":"paragraph","content":"‚úÖ **Monitor cache hit rates** - Track performance to optimize your strategy","properties":{}},{"id":"block-46","type":"paragraph","content":"‚úÖ **Use cache busting for assets** - Add hashes to filenames for proper updates","properties":{}},{"id":"block-47","type":"code","content":"```javascript\n`\n// Cache busting example\n<script src=\"app.js?v=1.0.3\"></script>\n// Or better with Webpack\noutput: {\n  filename: '[name].[contenthash].js'\n}\n`\n```","properties":{"language":"$undefined"}},{"id":"block-48","type":"heading_2","content":"üß† Conclusion","properties":{}},{"id":"block-49","type":"paragraph","content":"Effective caching is a powerful tool in a JavaScript developer's arsenal. By implementing appropriate caching strategies at different levels of your application, you can significantly improve performance, reduce server load, and enhance user experience.","properties":{}},{"id":"block-50","type":"paragraph","content":"Remember that the best caching approach depends on your specific application needs‚Äîthere's no one-size-fits-all solution. Analyze your data patterns and user behavior to determine the optimal caching strategy.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"June 1, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","JavaScript",{"className":"post-tag","children":["#","JavaScript"]}],["$","span","Caching",{"className":"post-tag","children":["#","Caching"]}]]}]]}]]}]]}]}]
