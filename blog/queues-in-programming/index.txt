3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","queues-in-programming","d"]
0:["2qmWCf6pyIsm5Xv15HEy9",[[["",{"children":["blog",{"children":[["slug","queues-in-programming","d"],{"children":["__PAGE__?{\"slug\":\"queues-in-programming\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","queues-in-programming","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"Queues in Programming: What They Are and Why You Should Use Them"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"As you dig deeper into backend development, distributed systems, or scalable architecture, you‚Äôll hear the word **\"queue\"** a lot.","properties":{}},{"id":"block-1","type":"paragraph","content":"But what exactly is a **queue** in programming? What is it used for? And why do developers rely on them so much?","properties":{}},{"id":"block-2","type":"paragraph","content":"In this post, we‚Äôll break down queues in a simple and practical way ‚Äî with real-life examples and beginner-friendly code.","properties":{}},{"id":"block-3","type":"divider","content":"---","properties":{}},{"id":"block-4","type":"heading_2","content":"üì¶ What Is a Queue?","properties":{}},{"id":"block-5","type":"paragraph","content":"A **queue** is a data structure or messaging system that works just like a real-life line: **First In, First Out (FIFO)**.","properties":{}},{"id":"block-6","type":"paragraph","content":"That means:","properties":{}},{"id":"block-7","type":"bulleted_list_item","content":"- ‚úÖ New items go to the **end** of the queue","properties":{}},{"id":"block-8","type":"bulleted_list_item","content":"- ‚úÖ Processing happens from the **front**","properties":{}},{"id":"block-9","type":"bulleted_list_item","content":"- ‚úÖ The order is preserved ‚Äî whoever gets in line first gets served first","properties":{}},{"id":"block-10","type":"divider","content":"---","properties":{}},{"id":"block-11","type":"heading_2","content":"üõ†Ô∏è What Are Queues Used For?","properties":{}},{"id":"block-12","type":"paragraph","content":"Queues are especially useful when:","properties":{}},{"id":"block-13","type":"bulleted_list_item","content":"- ‚öôÔ∏è You want to **decouple processes** (e.g., one service handles orders, another sends emails)","properties":{}},{"id":"block-14","type":"bulleted_list_item","content":"- üê¢ One part of the system is **slower** and needs time to catch up","properties":{}},{"id":"block-15","type":"bulleted_list_item","content":"- üî• You're handling **high loads** and want to avoid overloading your system","properties":{}},{"id":"block-16","type":"bulleted_list_item","content":"- ü§ù You need communication between services (like microservices or workers)","properties":{}},{"id":"block-17","type":"divider","content":"---","properties":{}},{"id":"block-18","type":"heading_2","content":"üß† Real-World Analogy","properties":{}},{"id":"block-19","type":"paragraph","content":"Let‚Äôs say you run an online store:","properties":{}},{"id":"block-20","type":"numbered_list_item","content":"1. üõí A user places an order ‚Üí the order is added to a queue","properties":{}},{"id":"block-21","type":"numbered_list_item","content":"2. üì© A background worker processes the order:","properties":{}},{"id":"block-21-0","type":"bulleted_list_item","content":"- Sends a confirmation email","properties":{}},{"id":"block-21-1","type":"bulleted_list_item","content":"- Updates inventory","properties":{}},{"id":"block-21-2","type":"bulleted_list_item","content":"- Generates the invoice","properties":{}},{"id":"block-22","type":"paragraph","content":"Thanks to the queue, all of this happens **asynchronously**, without making the user wait for every step.","properties":{}},{"id":"block-23","type":"divider","content":"---","properties":{}},{"id":"block-24","type":"heading_2","content":"üíª Code Example (Simple JS Queue)","properties":{}},{"id":"block-25","type":"paragraph","content":"Here‚Äôs how you could simulate a basic queue using JavaScript:","properties":{}},{"id":"block-26","type":"code","content":"```javascript\nconst queue = [];\n\nfunction enqueue(task) {\n  queue.push(task); // add to the end\n}\n\nfunction dequeue() {\n  return queue.shift(); // remove from the front\n}\n\n// Example:\nenqueue('Send email');\nenqueue('Process payment');\n\nconsole.log(dequeue()); // 'Send email'\nconsole.log(dequeue()); // 'Process payment'\n```","properties":{"language":"$undefined"}},{"id":"block-27","type":"paragraph","content":"Of course, real-world systems use more advanced queueing tools. Let‚Äôs look at those next.","properties":{}},{"id":"block-28","type":"divider","content":"---","properties":{}},{"id":"block-29","type":"heading_2","content":"üöÄ Real Queue Tools You‚Äôll Use","properties":{}},{"id":"block-30","type":"heading_3","content":"üü¢ **RabbitMQ**","properties":{}},{"id":"block-31","type":"bulleted_list_item","content":"- Open-source and widely used","properties":{}},{"id":"block-32","type":"bulleted_list_item","content":"- Great for complex systems with multiple consumers and routing logic","properties":{}},{"id":"block-33","type":"heading_3","content":"üü° **Amazon SQS (Simple Queue Service)**","properties":{}},{"id":"block-34","type":"bulleted_list_item","content":"- Managed by AWS","properties":{}},{"id":"block-35","type":"bulleted_list_item","content":"- Serverless, easy to scale, and doesn‚Äôt require setup","properties":{}},{"id":"block-36","type":"heading_3","content":"üî¥ **Redis (as a queue)**","properties":{}},{"id":"block-37","type":"bulleted_list_item","content":"- Mainly an in-memory data store, but can be used as a queue with commands like `LPUSH`/`RPOP`","properties":{}},{"id":"block-38","type":"heading_3","content":"üîµ **Apache Kafka**","properties":{}},{"id":"block-39","type":"bulleted_list_item","content":"- More advanced","properties":{}},{"id":"block-40","type":"bulleted_list_item","content":"- Used for real-time data streaming and event-driven architectures","properties":{}},{"id":"block-41","type":"divider","content":"---","properties":{}},{"id":"block-42","type":"heading_2","content":"üß± Common Use Cases","properties":{}},{"id":"block-43","type":"bulleted_list_item","content":"- üìß Sending emails in the background","properties":{}},{"id":"block-44","type":"bulleted_list_item","content":"- üñº Processing images or video after upload","properties":{}},{"id":"block-45","type":"bulleted_list_item","content":"- üì¶ Managing orders and inventory","properties":{}},{"id":"block-46","type":"bulleted_list_item","content":"- üîî Sending notifications","properties":{}},{"id":"block-47","type":"bulleted_list_item","content":"- ‚è∞ Delaying tasks (e.g., reminder one day before an event)","properties":{}},{"id":"block-48","type":"divider","content":"---","properties":{}},{"id":"block-49","type":"heading_2","content":"‚úÖ Why Use Queues?","properties":{}},{"id":"block-50","type":"bulleted_list_item","content":"- **Decouples logic** ‚Äî different parts of your system can work independently","properties":{}},{"id":"block-51","type":"bulleted_list_item","content":"- **Improves performance** ‚Äî users don‚Äôt wait for slow processes","properties":{}},{"id":"block-52","type":"bulleted_list_item","content":"- **Scales easily** ‚Äî you can add more workers as needed","properties":{}},{"id":"block-53","type":"bulleted_list_item","content":"- **Helps with error handling** ‚Äî retries, dead-letter queues, etc.","properties":{}},{"id":"block-54","type":"bulleted_list_item","content":"- **More reliable** ‚Äî queues persist messages even if your app crashes","properties":{}},{"id":"block-55","type":"divider","content":"---","properties":{}},{"id":"block-56","type":"heading_2","content":"‚ö†Ô∏è Common Considerations","properties":{}},{"id":"block-57","type":"bulleted_list_item","content":"- üß† Monitor queue size ‚Äî is it growing too much?","properties":{}},{"id":"block-58","type":"bulleted_list_item","content":"- üîÑ Handle retries and failures","properties":{}},{"id":"block-59","type":"bulleted_list_item","content":"- üö´ Avoid message loss ‚Äî especially with at-least-once delivery","properties":{}},{"id":"block-60","type":"bulleted_list_item","content":"- üîê Make sure multiple workers don‚Äôt process the same task twice","properties":{}},{"id":"block-61","type":"divider","content":"---","properties":{}},{"id":"block-62","type":"heading_2","content":"üìå Recap","properties":{}},{"id":"block-63","type":"bulleted_list_item","content":"- A **queue** processes tasks in a **First-In-First-Out (FIFO)** order","properties":{}},{"id":"block-64","type":"bulleted_list_item","content":"- Helps handle **asynchronous** and **background** tasks","properties":{}},{"id":"block-65","type":"bulleted_list_item","content":"- Common tools: RabbitMQ, SQS, Redis, Kafka","properties":{}},{"id":"block-66","type":"bulleted_list_item","content":"- Makes your system more **resilient, scalable, and responsive**","properties":{}},{"id":"block-67","type":"divider","content":"---","properties":{}},{"id":"block-68","type":"heading_2","content":"üéØ Final Thoughts","properties":{}},{"id":"block-69","type":"paragraph","content":"Queues may seem like a small concept, but they‚Äôre one of the secret weapons behind modern backend systems ‚Äî from sending emails to processing millions of events per second.","properties":{}},{"id":"block-70","type":"paragraph","content":"Start small: simulate one in JavaScript, or try setting up RabbitMQ or Amazon SQS. Once you understand how they work, you‚Äôll unlock a whole new level of backend architecture.","properties":{}},{"id":"block-74","type":"paragraph","content":"","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"June 25, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","Queues",{"className":"post-tag","children":["#","Queues"]}],["$","span","JavaScript",{"className":"post-tag","children":["#","JavaScript"]}]]}]]}]]}]]}]}]
