3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","microservices-vs-monolith-architecture","d"]
0:["eRwywZ6pxXOyheDza0k39",[[["",{"children":["blog",{"children":[["slug","microservices-vs-monolith-architecture","d"],{"children":["__PAGE__?{\"slug\":\"microservices-vs-monolith-architecture\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","microservices-vs-monolith-architecture","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"Microservices vs Monolith Architecture"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"heading_2","content":"What Are Monolithic and Microservice Architectures?","properties":{}},{"id":"block-1","type":"paragraph","content":"**Monolithic architecture** is a traditional software design where all components of an application are built as a single, unified unit. This means the UI, business logic, and data access layers are tightly coupled and run as a single service.","properties":{}},{"id":"block-2","type":"paragraph","content":"**Microservices architecture**, on the other hand, structures an application as a collection of small, independent services that communicate over APIs. Each service handles a specific business capability and can be developed, deployed, and scaled independently.","properties":{}},{"id":"block-3","type":"heading_2","content":"How Do They Work?","properties":{}},{"id":"block-4","type":"heading_3","content":"Monolith","properties":{}},{"id":"block-5","type":"paragraph","content":"In a monolithic system:","properties":{}},{"id":"block-6","type":"bulleted_list_item","content":"- All code lives in a single codebase.","properties":{}},{"id":"block-7","type":"bulleted_list_item","content":"- A single build produces one deployable artifact (e.g., a .jar, .war, or container).","properties":{}},{"id":"block-8","type":"bulleted_list_item","content":"- All components share the same runtime and memory space.","properties":{}},{"id":"block-9","type":"heading_3","content":"Microservices","properties":{}},{"id":"block-10","type":"paragraph","content":"In a microservices system:","properties":{}},{"id":"block-11","type":"bulleted_list_item","content":"- Each service has its own codebase, database (ideally), and runtime.","properties":{}},{"id":"block-12","type":"bulleted_list_item","content":"- Services communicate over the network using HTTP, gRPC, or message brokers.","properties":{}},{"id":"block-13","type":"bulleted_list_item","content":"- Deployment and scaling are handled per service, allowing fine-grained control.","properties":{}},{"id":"block-14","type":"heading_2","content":"Basic Comparison","properties":{}},{"id":"block-15","type":"table","content":"| Feature               | Monolith                      | Microservices                         |\n| --------------------- | ----------------------------- | ------------------------------------- |\n| **Codebase**          | Single                        | Multiple (one per service)            |\n| **Deployment**        | All-in-one                    | Independent per service               |\n| **Scalability**       | Whole app                     | Individual services                   |\n| **Development speed** | Fast at the beginning         | Scales better with large teams        |\n| **Failure impact**    | A crash can affect entire app | Isolated to specific services         |\n| **Complexity**        | Simpler to start with         | More infrastructure and orchestration |","properties":{}},{"id":"block-15-0","type":"table_row","content":"","properties":{}},{"id":"block-15-1","type":"table_row","content":"","properties":{}},{"id":"block-15-2","type":"table_row","content":"","properties":{}},{"id":"block-15-3","type":"table_row","content":"","properties":{}},{"id":"block-15-4","type":"table_row","content":"","properties":{}},{"id":"block-15-5","type":"table_row","content":"","properties":{}},{"id":"block-15-6","type":"table_row","content":"","properties":{}},{"id":"block-16","type":"heading_2","content":"Why Use One Over the Other?","properties":{}},{"id":"block-17","type":"table","content":"| Benefit                     | Monolith                          | Microservices                                    |\n| --------------------------- | --------------------------------- | ------------------------------------------------ |\n| Simpler to build and deploy | Great for small projects or MVPs  | Not ideal; can add unnecessary complexity        |\n| Easier to understand        | One codebase, fewer moving parts  | Harder to manage without proper tooling          |\n| Scalability & agility       | Harder to scale specific features | Services can be scaled and updated independently |\n| Team autonomy               | Tight coupling across teams       | Teams can own and deploy their own services      |","properties":{}},{"id":"block-17-0","type":"table_row","content":"","properties":{}},{"id":"block-17-1","type":"table_row","content":"","properties":{}},{"id":"block-17-2","type":"table_row","content":"","properties":{}},{"id":"block-17-3","type":"table_row","content":"","properties":{}},{"id":"block-17-4","type":"table_row","content":"","properties":{}},{"id":"block-18","type":"heading_2","content":"Important Notes","properties":{}},{"id":"block-19","type":"bulleted_list_item","content":"- Monoliths are not _bad_—they’re often better for startups or small teams with fast iteration needs.","properties":{}},{"id":"block-20","type":"bulleted_list_item","content":"- Microservices require **strong DevOps**, monitoring, CI/CD, and communication strategies.","properties":{}},{"id":"block-21","type":"bulleted_list_item","content":"- You can start with a monolith and evolve toward microservices as your needs grow (a pattern called **modular monolith**).","properties":{}},{"id":"block-22","type":"bulleted_list_item","content":"- Poorly designed microservices can lead to a **distributed monolith**, which is worse than either.","properties":{}},{"id":"block-23","type":"heading_2","content":"Best Practices","properties":{}},{"id":"block-24","type":"bulleted_list_item","content":"- **For Monoliths:**","properties":{}},{"id":"block-24-0","type":"bulleted_list_item","content":"- Maintain clean module separation within the codebase.","properties":{}},{"id":"block-24-1","type":"bulleted_list_item","content":"- Use layered architecture to organize logic and responsibilities.","properties":{}},{"id":"block-25","type":"bulleted_list_item","content":"- **For Microservices:**","properties":{}},{"id":"block-25-0","type":"bulleted_list_item","content":"- Define clear service boundaries based on business capabilities.","properties":{}},{"id":"block-25-1","type":"bulleted_list_item","content":"- Use centralized logging, service discovery, and monitoring tools.","properties":{}},{"id":"block-25-2","type":"bulleted_list_item","content":"- Ensure robust inter-service communication and error handling.","properties":{}},{"id":"block-25-3","type":"bulleted_list_item","content":"- Automate testing and deployment pipelines.","properties":{}},{"id":"block-26","type":"heading_2","content":"Conclusion","properties":{}},{"id":"block-27","type":"paragraph","content":"Choosing between microservices and monolithic architecture depends on your team size, project complexity, and long-term goals. Monoliths offer simplicity and speed in early stages, while microservices provide scalability and autonomy for growing systems. By understanding the trade-offs, you can design systems that evolve gracefully with your application’s needs.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"April 29, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","Microservices",{"className":"post-tag","children":["#","Microservices"]}],["$","span","web-development",{"className":"post-tag","children":["#","web-development"]}]]}]]}]]}]]}]}]
