3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","memoization-in-javascript","d"]
0:["kCrom6-aC27p3iCz2kGoD",[[["",{"children":["blog",{"children":[["slug","memoization-in-javascript","d"],{"children":["__PAGE__?{\"slug\":\"memoization-in-javascript\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","memoization-in-javascript","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"Memoization in JavaScript and React: Why and When to Use It"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"If your app feels a little sluggish or you're seeing functions run more often than they should, memoization might be the performance boost you're looking for.","properties":{}},{"id":"block-1","type":"paragraph","content":"In this post, we'll break down what memoization is, why it matters, and how to use it effectively in JavaScript and React—without getting lost in theory.","properties":{}},{"id":"block-2","type":"divider","content":"---","properties":{}},{"id":"block-3","type":"heading_2","content":"🧠 What Is Memoization?","properties":{}},{"id":"block-4","type":"paragraph","content":"Memoization is an optimization technique that **caches the result of a function** so that if it's called again with the same arguments, the function doesn’t run again—it just returns the cached result.","properties":{}},{"id":"block-5","type":"paragraph","content":"This is especially useful for expensive calculations or repeated work in rendering.","properties":{}},{"id":"block-6","type":"paragraph","content":"Here’s a basic example in JavaScript:","properties":{}},{"id":"block-7","type":"code","content":"```javascript\n`\nfunction slowFunction(num) {\n  console.log('Running slow function...');\n  return num * 2;\n}\n\nconst memoized = (() => {\n  const cache = {};\n  return function (num) {\n    if (cache[num]) return cache[num];\n    const result = slowFunction(num);\n    cache[num] = result;\n    return result;\n  };\n})();\n\nconsole.log(memoized(5)); // Runs the function\nconsole.log(memoized(5)); // Returns cached result\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-8","type":"paragraph","content":"Memoization is all about **avoiding repeated work**.","properties":{}},{"id":"block-9","type":"divider","content":"---","properties":{}},{"id":"block-10","type":"heading_2","content":"🔧 Memoization in React","properties":{}},{"id":"block-11","type":"paragraph","content":"React apps often re-render. And sometimes, these renders re-trigger functions that don’t need to run again.","properties":{}},{"id":"block-12","type":"paragraph","content":"This is where memoization comes in, using built-in hooks like:","properties":{}},{"id":"block-13","type":"bulleted_list_item","content":"- `useMemo` — to memoize values","properties":{}},{"id":"block-14","type":"bulleted_list_item","content":"- `useCallback` — to memoize functions","properties":{}},{"id":"block-15","type":"bulleted_list_item","content":"- `React.memo` — to memoize components","properties":{}},{"id":"block-16","type":"paragraph","content":"Let’s go over each.","properties":{}},{"id":"block-17","type":"divider","content":"---","properties":{}},{"id":"block-18","type":"heading_2","content":"✨ useMemo","properties":{}},{"id":"block-19","type":"paragraph","content":"`useMemo` helps you avoid recalculating a value unless its dependencies change.","properties":{}},{"id":"block-20","type":"code","content":"```javascript\n`\nconst expensiveCalculation = (num) => {\n  console.log('Calculating...');\n  return num * 1000;\n};\n\nfunction App({ number }) {\n  const result = useMemo(() => expensiveCalculation(number), [number]);\n  return <p>Result: {result}</p>;\n}\n`\n```","properties":{"language":"$undefined"}},{"id":"block-21","type":"paragraph","content":"Without `useMemo`, the calculation would run on every render. With it, React only recalculates when `number` changes.","properties":{}},{"id":"block-22","type":"divider","content":"---","properties":{}},{"id":"block-23","type":"heading_2","content":"🔁 useCallback","properties":{}},{"id":"block-24","type":"paragraph","content":"`useCallback` is like `useMemo`, but for functions.","properties":{}},{"id":"block-25","type":"paragraph","content":"It returns a memoized version of a function so it doesn’t get recreated unless its dependencies change.","properties":{}},{"id":"block-26","type":"code","content":"```javascript\n`\nconst handleClick = useCallback(() => {\n  console.log('Button clicked');\n}, []);\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-27","type":"paragraph","content":"Useful when you pass callbacks to child components that rely on reference equality to avoid re-renders.","properties":{}},{"id":"block-28","type":"divider","content":"---","properties":{}},{"id":"block-29","type":"heading_2","content":"🧱 React.memo","properties":{}},{"id":"block-30","type":"paragraph","content":"`React.memo` is a higher-order component that prevents unnecessary re-renders of functional components.","properties":{}},{"id":"block-31","type":"code","content":"```javascript\n`\nconst Button = React.memo(function Button({ onClick, children }) {\n  return <button onClick={onClick}>{children}</button>;\n});\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-32","type":"paragraph","content":"If the props don’t change, the component doesn’t re-render.","properties":{}},{"id":"block-33","type":"paragraph","content":"This is powerful when combined with `useCallback` and `useMemo`.","properties":{}},{"id":"block-34","type":"divider","content":"---","properties":{}},{"id":"block-35","type":"heading_2","content":"⚠️ When NOT to Use Memoization","properties":{}},{"id":"block-36","type":"paragraph","content":"Memoization is great, but not always necessary.","properties":{}},{"id":"block-37","type":"paragraph","content":"Avoid it when:","properties":{}},{"id":"block-38","type":"bulleted_list_item","content":"- The calculation or component is **already fast**","properties":{}},{"id":"block-39","type":"bulleted_list_item","content":"- Your dependencies **change constantly**","properties":{}},{"id":"block-40","type":"bulleted_list_item","content":"- You’re not seeing performance issues","properties":{}},{"id":"block-41","type":"paragraph","content":"Premature optimization can make your code more complex without real benefits.","properties":{}},{"id":"block-42","type":"divider","content":"---","properties":{}},{"id":"block-43","type":"heading_2","content":"✅ Recap","properties":{}},{"id":"block-44","type":"bulleted_list_item","content":"- ✅ Memoization caches function results to avoid re-computation.","properties":{}},{"id":"block-45","type":"bulleted_list_item","content":"- ✅ In React, use `useMemo` for values, `useCallback` for functions, and `React.memo` for components.","properties":{}},{"id":"block-46","type":"bulleted_list_item","content":"- ✅ It’s most useful for expensive calculations, frequent renders, and prop-heavy components.","properties":{}},{"id":"block-47","type":"bulleted_list_item","content":"- ✅ Use it wisely—don’t memoize everything by default.","properties":{}},{"id":"block-48","type":"divider","content":"---","properties":{}},{"id":"block-49","type":"heading_2","content":"📌 Conclusions","properties":{}},{"id":"block-50","type":"paragraph","content":"Memoization is a simple idea that can have a big impact on your app’s performance.","properties":{}},{"id":"block-51","type":"paragraph","content":"If you find your functions running too often or components re-rendering unnecessarily, memoization might be the tool to help you fix it.","properties":{}},{"id":"block-52","type":"paragraph","content":"Just remember: it’s not about making everything fast—it’s about avoiding **work that doesn’t need to happen again**.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"June 14, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","memoization",{"className":"post-tag","children":["#","memoization"]}],["$","span","JavaScript",{"className":"post-tag","children":["#","JavaScript"]}]]}]]}]]}]]}]}]
