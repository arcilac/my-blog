3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","mastering-useeffect-react","d"]
0:["PbDaKGlY8GGGhX1RTwG2b",[[["",{"children":["blog",{"children":[["slug","mastering-useeffect-react","d"],{"children":["__PAGE__?{\"slug\":\"mastering-useeffect-react\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","mastering-useeffect-react","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"Mastering useEffect in React: A Complete Guide"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"React’s `useEffect` hook is one of the most important tools in a React developer's toolbox. It allows you to perform **side effects** in function components—like fetching data, listening to events, or updating the DOM.","properties":{}},{"id":"block-1","type":"paragraph","content":"In this article, we’ll explore how `useEffect` works, why it's needed, and how to use it correctly—with real examples and best practices.","properties":{}},{"id":"block-2","type":"divider","content":"---","properties":{}},{"id":"block-3","type":"heading_2","content":"🧠 What is a Side Effect?","properties":{}},{"id":"block-4","type":"paragraph","content":"A **side effect** is any operation that interacts with the outside world or causes a change outside the current function's scope.","properties":{}},{"id":"block-5","type":"paragraph","content":"Examples include:","properties":{}},{"id":"block-6","type":"bulleted_list_item","content":"- Fetching data from an API","properties":{}},{"id":"block-7","type":"bulleted_list_item","content":"- Subscribing to or cleaning up an event listener","properties":{}},{"id":"block-8","type":"bulleted_list_item","content":"- Writing to local storage","properties":{}},{"id":"block-9","type":"bulleted_list_item","content":"- Setting timers","properties":{}},{"id":"block-10","type":"paragraph","content":"In React, **side effects should not run during rendering**—that’s where `useEffect` comes in.","properties":{}},{"id":"block-11","type":"divider","content":"---","properties":{}},{"id":"block-12","type":"heading_2","content":"⚙️ Basic Syntax","properties":{}},{"id":"block-13","type":"code","content":"```javascript\n`\nuseEffect(() => {\n  // Side effect logic here\n}, [dependencies]);\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-14","type":"bulleted_list_item","content":"- The first argument is a function (effect).","properties":{}},{"id":"block-15","type":"bulleted_list_item","content":"- The second is a dependency array.","properties":{}},{"id":"block-16","type":"divider","content":"---","properties":{}},{"id":"block-17","type":"heading_2","content":"✅ useEffect Without Dependencies","properties":{}},{"id":"block-18","type":"code","content":"```javascript\n`\nuseEffect(() => {\n  console.log('Component mounted');\n});\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-19","type":"paragraph","content":"⚠️ This runs **after every render**. Not recommended unless necessary.","properties":{}},{"id":"block-20","type":"divider","content":"---","properties":{}},{"id":"block-21","type":"heading_2","content":"📦 useEffect on Component Mount (Run Once)","properties":{}},{"id":"block-22","type":"code","content":"```javascript\n`\nuseEffect(() => {\n  console.log('Component mounted');\n\n  return () => {\n    console.log('Component unmounted');\n  };\n}, []);\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-23","type":"paragraph","content":"✅ The empty array means the effect runs **once** after the initial render—like `componentDidMount`.","properties":{}},{"id":"block-24","type":"paragraph","content":"Also useful for cleanup logic when the component is removed.","properties":{}},{"id":"block-25","type":"divider","content":"---","properties":{}},{"id":"block-26","type":"heading_2","content":"🌐 Fetching Data with useEffect","properties":{}},{"id":"block-27","type":"code","content":"```javascript\n`\nimport { useEffect, useState } from 'react';\n\nfunction UsersList() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    async function fetchUsers() {\n      const res = await fetch('/api/users');\n      const data = await res.json();\n      setUsers(data);\n    }\n\n    fetchUsers();\n  }, []);\n\n  return (\n    <ul>\n      {users.map(u => (\n        <li key={u.id}>{u.name}</li>\n      ))}\n    </ul>\n  );\n}\n`\n```","properties":{"language":"$undefined"}},{"id":"block-28","type":"paragraph","content":"📝 Tips:","properties":{}},{"id":"block-29","type":"bulleted_list_item","content":"- Use async functions **inside** the effect.","properties":{}},{"id":"block-30","type":"bulleted_list_item","content":"- Always provide a dependency array to avoid unnecessary requests.","properties":{}},{"id":"block-31","type":"divider","content":"---","properties":{}},{"id":"block-32","type":"heading_2","content":"🔁 useEffect with Dependencies","properties":{}},{"id":"block-33","type":"code","content":"```javascript\n`\nuseEffect(() => {\n  console.log(`The value is: ${value}`);\n}, [value]);\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-34","type":"paragraph","content":"This effect runs **every time** **`value`** **changes**.","properties":{}},{"id":"block-35","type":"paragraph","content":"You can include multiple dependencies:","properties":{}},{"id":"block-36","type":"code","content":"```javascript\n`\nuseEffect(() => {\n  console.log('User or token changed');\n}, [user, token]);\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-37","type":"divider","content":"---","properties":{}},{"id":"block-38","type":"heading_2","content":"🧹 Cleanup Functions","properties":{}},{"id":"block-39","type":"paragraph","content":"Cleanup helps avoid memory leaks—like when using timers or event listeners.","properties":{}},{"id":"block-40","type":"code","content":"```javascript\n`\nuseEffect(() => {\n  const interval = setInterval(() => {\n    console.log('Tick');\n  }, 1000);\n\n  return () => clearInterval(interval);\n}, []);\n`\n```","properties":{"language":"$undefined"}},{"id":"block-41","type":"divider","content":"---","properties":{}},{"id":"block-42","type":"heading_2","content":"🚨 Common Mistakes to Avoid","properties":{}},{"id":"block-43","type":"paragraph","content":"❌ Forgetting dependencies","properties":{}},{"id":"block-44","type":"paragraph","content":"✅ Always include all variables used in the effect in the dependency array (or use `eslint-plugin-react-hooks`)","properties":{}},{"id":"block-45","type":"paragraph","content":"❌ Using async directly in `useEffect`","properties":{}},{"id":"block-46","type":"paragraph","content":"✅ Instead, define an async function inside the effect and call it","properties":{}},{"id":"block-47","type":"paragraph","content":"❌ Triggering infinite loops","properties":{}},{"id":"block-48","type":"paragraph","content":"✅ Double-check that the effect doesn’t update its own dependencies unintentionally","properties":{}},{"id":"block-49","type":"divider","content":"---","properties":{}},{"id":"block-50","type":"heading_2","content":"🧰 Best Practices Checklist","properties":{}},{"id":"block-51","type":"paragraph","content":"✔️ Use `useEffect` for data fetching, subscriptions, and timers","properties":{}},{"id":"block-52","type":"paragraph","content":"✔️ Clean up with `return () => {}` inside the effect","properties":{}},{"id":"block-53","type":"paragraph","content":"✔️ Always use a dependency array","properties":{}},{"id":"block-54","type":"paragraph","content":"✔️ Break effects into smaller ones when they do different things","properties":{}},{"id":"block-55","type":"paragraph","content":"✔️ Use custom hooks to reuse effect logic across components","properties":{}},{"id":"block-56","type":"divider","content":"---","properties":{}},{"id":"block-57","type":"heading_2","content":"🧠 Conclusion","properties":{}},{"id":"block-58","type":"paragraph","content":"`useEffect` is a powerful and essential part of writing React applications. It helps you manage side effects in a clean, predictable way. By understanding how dependencies work and how to avoid common pitfalls, you can build responsive and robust components.","properties":{}},{"id":"block-59","type":"paragraph","content":"Practice is key—start using `useEffect` in real components to solidify your understanding.","properties":{}},{"id":"block-60","type":"paragraph","content":"","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"May 22, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","react",{"className":"post-tag","children":["#","react"]}],["$","span","JavaScript",{"className":"post-tag","children":["#","JavaScript"]}]]}]]}]]}]]}]}]
