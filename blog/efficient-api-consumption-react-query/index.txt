3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","efficient-api-consumption-react-query","d"]
0:["kCrom6-aC27p3iCz2kGoD",[[["",{"children":["blog",{"children":[["slug","efficient-api-consumption-react-query","d"],{"children":["__PAGE__?{\"slug\":\"efficient-api-consumption-react-query\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","efficient-api-consumption-react-query","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"How to Efficiently Consume APIs with React Query"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"React Query is a powerful library for data fetching, caching, and synchronization in React applications. It reduces boilerplate code, improves performance, and simplifies state management when dealing with server data.","properties":{}},{"id":"block-1","type":"heading_2","content":"Why Use React Query?","properties":{}},{"id":"block-2","type":"paragraph","content":"Traditional data fetching in React usually involves `useEffect`, `useState`, and a lot of manual loading/error handling. React Query abstracts much of this away and introduces a more declarative and scalable approach to working with APIs.","properties":{}},{"id":"block-3","type":"paragraph","content":"Benefits include:","properties":{}},{"id":"block-4","type":"bulleted_list_item","content":"- **Built-in Caching**","properties":{}},{"id":"block-5","type":"bulleted_list_item","content":"- **Automatic Background Refetching**","properties":{}},{"id":"block-6","type":"bulleted_list_item","content":"- **Pagination and Infinite Queries**","properties":{}},{"id":"block-7","type":"bulleted_list_item","content":"- **Out-of-the-box Devtools for Debugging**","properties":{}},{"id":"block-8","type":"bulleted_list_item","content":"- **Better UX with Stale-While-Revalidate Pattern**","properties":{}},{"id":"block-9","type":"heading_2","content":"Basic Usage","properties":{}},{"id":"block-10","type":"paragraph","content":"Here’s how to fetch data from an API using React Query.","properties":{}},{"id":"block-11","type":"paragraph","content":"First, install the package:","properties":{}},{"id":"block-12","type":"code","content":"```shell\n`\nnpm install @tanstack/react-query\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-13","type":"paragraph","content":"Set up the Query Client and Provider:","properties":{}},{"id":"block-14","type":"code","content":"```javascript\n`\n// main.jsx or App.jsx\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <QueryClientProvider client={queryClient}>\n    <App />\n  </QueryClientProvider>\n);\n`\n```","properties":{"language":"$undefined"}},{"id":"block-15","type":"paragraph","content":"Now let’s fetch some data:","properties":{}},{"id":"block-16","type":"code","content":"```javascript\n`\n// Users.jsx\nimport { useQuery } from '@tanstack/react-query';\nimport axios from 'axios';\n\nconst fetchUsers = async () => {\n  const { data } = await axios.get('https://jsonplaceholder.typicode.com/users');\n  return data;\n};\n\nexport default function Users() {\n  const { data, error, isLoading } = useQuery(['users'], fetchUsers);\n\n  if (isLoading) return <p>Loading...</p>;\n  if (error) return <p>Error fetching users</p>;\n\n  return (\n    <ul>\n      {data.map(user => (\n        <li key={user.id}>{user.name}</li>\n      ))}\n    </ul>\n  );\n}\n`\n```","properties":{"language":"$undefined"}},{"id":"block-17","type":"paragraph","content":"This code automatically handles loading, error states, caching, and background updates.","properties":{}},{"id":"block-18","type":"heading_2","content":"Handling POST, PUT, DELETE (Mutations)","properties":{}},{"id":"block-19","type":"paragraph","content":"React Query also makes it easy to send data with `useMutation`.","properties":{}},{"id":"block-20","type":"code","content":"```javascript\n`\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport axios from 'axios';\n\nconst createUser = async (user) => {\n  const { data } = await axios.post('https://jsonplaceholder.typicode.com/users', user);\n  return data;\n};\n\nexport default function CreateUser() {\n  const queryClient = useQueryClient();\n  const mutation = useMutation(createUser, {\n    onSuccess: () => {\n      // Refetch users after adding a new one\n      queryClient.invalidateQueries(['users']);\n    },\n  });\n\n  const handleSubmit = () => {\n    mutation.mutate({ name: 'New User' });\n  };\n\n  return (\n    <div>\n      <button onClick={handleSubmit}>Create User</button>\n      {mutation.isPending && <p>Creating...</p>}\n      {mutation.isSuccess && <p>User created!</p>}\n    </div>\n  );\n}\n`\n```","properties":{"language":"$undefined"}},{"id":"block-21","type":"heading_2","content":"Tips for Efficient Use","properties":{}},{"id":"block-22","type":"numbered_list_item","content":"1. **Use Query Keys Wisely**","properties":{}},{"id":"block-22-0","type":"paragraph","content":"Query keys control cache identity. Use consistent, descriptive keys like `['user', userId]`.","properties":{}},{"id":"block-23","type":"numbered_list_item","content":"2. **Set** **`staleTime`** **and** **`cacheTime`**","properties":{}},{"id":"block-23-0","type":"paragraph","content":"Adjust freshness and cache behavior to avoid unnecessary refetches.","properties":{}},{"id":"block-24","type":"numbered_list_item","content":"3. **Use Selectors**","properties":{}},{"id":"block-24-0","type":"paragraph","content":"Shape the data returned from queries to fit your UI needs.","properties":{}},{"id":"block-24-1","type":"code","content":"```javascript\n`\nuseQuery(['users'], fetchUsers, {\n  select: data => data.map(user => user.name),\n});\n`\n```","properties":{"language":"$undefined"}},{"id":"block-25","type":"numbered_list_item","content":"4. **Prefetching Data**","properties":{}},{"id":"block-25-0","type":"paragraph","content":"Anticipate data needs to improve perceived performance.","properties":{}},{"id":"block-25-1","type":"code","content":"```javascript\n`\nqueryClient.prefetchQuery(['user', userId], () => fetchUser(userId));\n`\n```","properties":{"language":"$undefined"}},{"id":"block-26","type":"heading_2","content":"Conclusion","properties":{}},{"id":"block-27","type":"paragraph","content":"React Query streamlines API interaction in React apps by managing caching, refetching, error handling, and background updates—all with less code and better performance. Whether you're building a dashboard, form-heavy app, or just want better UX, React Query is a game-changer for working with APIs.","properties":{}},{"id":"block-34","type":"paragraph","content":"","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"May 8, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","React Query",{"className":"post-tag","children":["#","React Query"]}],["$","span","react",{"className":"post-tag","children":["#","react"]}],["$","span","web-development",{"className":"post-tag","children":["#","web-development"]}],["$","span","frontend",{"className":"post-tag","children":["#","frontend"]}]]}]]}]]}]]}]}]
