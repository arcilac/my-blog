3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-b80959e2834ced79.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-b80959e2834ced79.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-b80959e2834ced79.js"],""]
4:["slug","javascript-array-methods","d"]
0:["mF4MjsFj4LUCVXhft3d17",[[["",{"children":["blog",{"children":[["slug","javascript-array-methods","d"],{"children":["__PAGE__?{\"slug\":\"javascript-array-methods\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","javascript-array-methods","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"JavaScript Array Methods: map, filter, reduce and More"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"paragraph","content":"Working with arrays in JavaScript? You’re going to run into methods like `map`, `filter`, and `reduce`—and if you know how to use them well, they can make your code **cleaner**, **faster**, and **more expressive**.","properties":{}},{"id":"block-1","type":"divider","content":"---","properties":{}},{"id":"block-2","type":"heading_2","content":"🧠 Why Learn These Methods?","properties":{}},{"id":"block-3","type":"paragraph","content":"Array methods let you **transform**, **filter**, and **summarize** data in just a few lines of code.","properties":{}},{"id":"block-4","type":"paragraph","content":"Instead of writing loops manually, you can use built-in methods that are easier to read, debug, and chain together.","properties":{}},{"id":"block-5","type":"divider","content":"---","properties":{}},{"id":"block-6","type":"heading_2","content":"🔄 map()","properties":{}},{"id":"block-7","type":"paragraph","content":"**Use it when:** you want to **transform** every element in an array.","properties":{}},{"id":"block-8","type":"paragraph","content":"It returns a **new array**, leaving the original untouched.","properties":{}},{"id":"block-9","type":"code","content":"```javascript\nconst names = ['Marta', 'Luis', 'Ana'];\nconst uppercased = names.map(name => name.toUpperCase());\n// ['MARTA', 'LUIS', 'ANA']\n```","properties":{"language":"$undefined"}},{"id":"block-10","type":"paragraph","content":"🔸 Common use case: formatting data before rendering in the UI.","properties":{}},{"id":"block-11","type":"divider","content":"---","properties":{}},{"id":"block-12","type":"heading_2","content":"✅ filter()","properties":{}},{"id":"block-13","type":"paragraph","content":"**Use it when:** you want to **keep** only certain elements that match a condition.","properties":{}},{"id":"block-14","type":"code","content":"```javascript\nconst ages = [15, 22, 18, 30];\nconst adults = ages.filter(age => age >= 18);\n// [22, 18, 30]\n```","properties":{"language":"$undefined"}},{"id":"block-15","type":"paragraph","content":"🔸 Common use case: showing only active users, products in stock, or valid inputs.","properties":{}},{"id":"block-16","type":"divider","content":"---","properties":{}},{"id":"block-17","type":"heading_2","content":"➕ reduce()","properties":{}},{"id":"block-18","type":"paragraph","content":"**Use it when:** you want to calculate a **single value** from an array.","properties":{}},{"id":"block-19","type":"paragraph","content":"Example: sum all numbers in an array.","properties":{}},{"id":"block-20","type":"code","content":"```javascript\nconst numbers = [5, 10, 15];\nconst total = numbers.reduce((acc, curr) => acc + curr, 0);\n// 30\n```","properties":{"language":"$undefined"}},{"id":"block-21","type":"paragraph","content":"You can use `reduce` to:","properties":{}},{"id":"block-22","type":"bulleted_list_item","content":"- Sum totals","properties":{}},{"id":"block-23","type":"bulleted_list_item","content":"- Count items","properties":{}},{"id":"block-24","type":"bulleted_list_item","content":"- Flatten arrays","properties":{}},{"id":"block-25","type":"bulleted_list_item","content":"- Build objects or groups","properties":{}},{"id":"block-26","type":"paragraph","content":"🔸 It’s powerful—but can be harder to read if misused.","properties":{}},{"id":"block-27","type":"divider","content":"---","properties":{}},{"id":"block-28","type":"heading_2","content":"🔁 forEach()","properties":{}},{"id":"block-29","type":"paragraph","content":"**Use it when:** you want to run a function **on each item**, but don’t need to return anything.","properties":{}},{"id":"block-30","type":"code","content":"```javascript\nconst fruits = ['apple', 'banana'];\nfruits.forEach(fruit => {\n  console.log(`I like ${fruit}`);\n});\n```","properties":{"language":"$undefined"}},{"id":"block-31","type":"paragraph","content":"⚠️ `forEach` doesn’t return a new array—use it for side effects like logging or API calls.","properties":{}},{"id":"block-32","type":"divider","content":"---","properties":{}},{"id":"block-33","type":"heading_2","content":"🧪 some() and every()","properties":{}},{"id":"block-34","type":"paragraph","content":"These two methods are about **conditions**.","properties":{}},{"id":"block-35","type":"bulleted_list_item","content":"- `some()` returns `true` if **at least one** item passes the test","properties":{}},{"id":"block-36","type":"bulleted_list_item","content":"- `every()` returns `true` if **all items** pass","properties":{}},{"id":"block-37","type":"code","content":"```javascript\nconst scores = [90, 80, 100];\nscores.every(score => score >= 50); // true\nscores.some(score => score === 100); // true\n```","properties":{"language":"$undefined"}},{"id":"block-38","type":"divider","content":"---","properties":{}},{"id":"block-39","type":"heading_2","content":"🔍 find() and findIndex()","properties":{}},{"id":"block-40","type":"paragraph","content":"Use these to **get a single item** from an array.","properties":{}},{"id":"block-41","type":"code","content":"```javascript\nconst users = [\n  { id: 1, name: 'Marta' },\n  { id: 2, name: 'Luis' }\n];\n\nconst user = users.find(u => u.id === 2);\n// { id: 2, name: 'Luis' }\n\nconst index = users.findIndex(u => u.name === 'Marta');\n// 0\n```","properties":{"language":"$undefined"}},{"id":"block-42","type":"divider","content":"---","properties":{}},{"id":"block-43","type":"heading_2","content":"🧩 Real-World Example: Filtering and Mapping","properties":{}},{"id":"block-44","type":"paragraph","content":"Let’s say you have a list of users and want to show only verified names in uppercase:","properties":{}},{"id":"block-45","type":"code","content":"```javascript\nconst users = [\n  { name: 'Marta', verified: true },\n  { name: 'Pedro', verified: false },\n  { name: 'Ana', verified: true }\n];\n\nconst verifiedNames = users\n  .filter(user => user.verified)\n  .map(user => user.name.toUpperCase());\n// ['MARTA', 'ANA']\n```","properties":{"language":"$undefined"}},{"id":"block-46","type":"paragraph","content":"This kind of chaining is common in frontend apps (like React) and backend APIs (like Express).","properties":{}},{"id":"block-47","type":"divider","content":"---","properties":{}},{"id":"block-48","type":"heading_2","content":"✅ Summary Checklist","properties":{}},{"id":"block-49","type":"table","content":"| Method        | Purpose                          |\n| ------------- | -------------------------------- |\n| `map()`       | Transform each element           |\n| `filter()`    | Keep elements that match a test  |\n| `reduce()`    | Turn array into a single value   |\n| `forEach()`   | Run a side-effect per element    |\n| `some()`      | Check if **any** element matches |\n| `every()`     | Check if **all** match           |\n| `find()`      | Get the **first** matching item  |\n| `findIndex()` | Get index of match               |","properties":{}},{"id":"block-49-0","type":"table_row","content":"","properties":{}},{"id":"block-49-1","type":"table_row","content":"","properties":{}},{"id":"block-49-2","type":"table_row","content":"","properties":{}},{"id":"block-49-3","type":"table_row","content":"","properties":{}},{"id":"block-49-4","type":"table_row","content":"","properties":{}},{"id":"block-49-5","type":"table_row","content":"","properties":{}},{"id":"block-49-6","type":"table_row","content":"","properties":{}},{"id":"block-49-7","type":"table_row","content":"","properties":{}},{"id":"block-49-8","type":"table_row","content":"","properties":{}},{"id":"block-50","type":"divider","content":"---","properties":{}},{"id":"block-51","type":"heading_2","content":"🧠 Conclusion","properties":{}},{"id":"block-52","type":"paragraph","content":"JavaScript array methods is a game-changer for writing **cleaner**, **more functional**, and **more readable** code.","properties":{}},{"id":"block-53","type":"paragraph","content":"These methods don’t just replace `for` loops—they make your intentions **clear**: Are you transforming? Filtering? Summarizing? You say it with the method you choose.","properties":{}},{"id":"block-54","type":"paragraph","content":"Once you start using them, you’ll wonder how you ever wrote JavaScript without them.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"June 29, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","JavaScript",{"className":"post-tag","children":["#","JavaScript"]}],["$","span","Array",{"className":"post-tag","children":["#","Array"]}],["$","span","Methods",{"className":"post-tag","children":["#","Methods"]}]]}]]}]]}]]}]}]
