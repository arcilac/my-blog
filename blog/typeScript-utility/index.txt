3:I[5613,[],""]
5:I[31778,[],""]
6:I[70269,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],"ThemeProvider"]
7:I[63186,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
8:I[69148,["250","static/chunks/250-f66e98452b80d3d3.js","185","static/chunks/app/layout-eeb53c07ffb10a3f.js"],""]
4:["slug","typeScript-utility","d"]
0:["954LdPQaywTCKaBHNCQQo",[[["",{"children":["blog",{"children":[["slug","typeScript-utility","d"],{"children":["__PAGE__?{\"slug\":\"typeScript-utility\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","typeScript-utility","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/a494df4e6249897d.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}]]}],["$","body",null,{"className":"bg-black text-white min-h-screen flex flex-col","children":["$","$L6",null,{"defaultTheme":"dark","children":["$","div",null,{"className":"flex flex-col min-h-screen","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$L8",null,{}]]}]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/my-blog/_next/static/css/83cc0ea6f102b864.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Blog"}],["$","meta","3",{"name":"description","content":"A personal blog connected with Notion"}],["$","link","4",{"rel":"icon","href":"/my-blog/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
a:I[74366,["644","static/chunks/644-4de71cea8aeaed79.js","852","static/chunks/852-215445fe88778aae.js","308","static/chunks/app/blog/%5Bslug%5D/page-fab3f594c1476cf4.js"],"NotionRenderer"]
2:["$","main",null,{"className":"post-container","children":["$","article",null,{"className":"post-article","children":[null,["$","h1",null,{"className":"post-title","children":"TypeScript Utility Types Explained"}],["$","div",null,{"className":"post-content","children":["$","$La",null,{"blocks":[{"id":"block-0","type":"heading_2","content":"What Are Utility Types in TypeScript?","properties":{}},{"id":"block-1","type":"paragraph","content":"TypeScript provides several built-in utility types that help you transform and compose types without rewriting them from scratch. These utilities make your code more expressive, reusable, and easier to maintain.","properties":{}},{"id":"block-2","type":"paragraph","content":"They are especially helpful when working with large object types, API responses, or manipulating types based on different needs.","properties":{}},{"id":"block-3","type":"heading_2","content":"Common Utility Types and How to Use Them","properties":{}},{"id":"block-4","type":"heading_3","content":"1. **Partial<T>**","properties":{}},{"id":"block-5","type":"paragraph","content":"Makes all properties of a type optional.","properties":{}},{"id":"block-6","type":"code","content":"```typescript\n`\ntype User = {\n  id: number;\n  name: string;\n};\n\nconst updateUser = (user: Partial<User>) => {\n  // You can now pass only some fields\n};\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-7","type":"divider","content":"---","properties":{}},{"id":"block-8","type":"heading_3","content":"2. **Required<T>**","properties":{}},{"id":"block-9","type":"paragraph","content":"Makes all properties of a type required.","properties":{}},{"id":"block-10","type":"code","content":"```typescript\n`\ntype Props = {\n  id?: string;\n  value?: number;\n};\n\nconst input: Required<Props> = {\n  id: \"abc\",\n  value: 42,\n};\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-11","type":"divider","content":"---","properties":{}},{"id":"block-12","type":"heading_3","content":"3. **Readonly<T>**","properties":{}},{"id":"block-13","type":"paragraph","content":"Marks all properties as read-only (immutable).","properties":{}},{"id":"block-14","type":"code","content":"```typescript\n`\ntype Settings = {\n  theme: string;\n};\n\nconst config: Readonly<Settings> = {\n  theme: \"dark\",\n};\n\n// config.theme = \"light\"; // ‚ùå Error\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-15","type":"divider","content":"---","properties":{}},{"id":"block-16","type":"heading_3","content":"4. **Pick<T, K>**","properties":{}},{"id":"block-17","type":"paragraph","content":"Creates a new type by picking specific properties.","properties":{}},{"id":"block-18","type":"code","content":"```typescript\n`\ntype Post = {\n  id: number;\n  title: string;\n  content: string;\n};\n\ntype PostPreview = Pick<Post, \"id\" | \"title\">;\n`\n```","properties":{"language":"$undefined"}},{"id":"block-19","type":"divider","content":"---","properties":{}},{"id":"block-20","type":"heading_3","content":"5. **Omit<T, K>**","properties":{}},{"id":"block-21","type":"paragraph","content":"Creates a new type by omitting specific properties.","properties":{}},{"id":"block-22","type":"code","content":"```typescript\n`\ntype User = {\n  id: number;\n  name: string;\n  password: string;\n};\n\ntype PublicUser = Omit<User, \"password\">;\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-23","type":"divider","content":"---","properties":{}},{"id":"block-24","type":"heading_3","content":"6. **Record<K, T>**","properties":{}},{"id":"block-25","type":"paragraph","content":"Constructs a type with a set of keys `K` and values of type `T`.","properties":{}},{"id":"block-26","type":"code","content":"```typescript\n`\ntype Theme = \"dark\" | \"light\";\n\nconst themeColors: Record<Theme, string> = {\n  dark: \"#000000\",\n  light: \"#ffffff\",\n};\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-27","type":"divider","content":"---","properties":{}},{"id":"block-28","type":"heading_3","content":"7. **Exclude<T, U>**","properties":{}},{"id":"block-29","type":"paragraph","content":"Removes types from `T` that are assignable to `U`.","properties":{}},{"id":"block-30","type":"code","content":"```typescript\n`\ntype Roles = \"admin\" | \"user\" | \"guest\";\n\ntype NonGuests = Exclude<Roles, \"guest\">; // \"admin\" | \"user\"\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-31","type":"divider","content":"---","properties":{}},{"id":"block-32","type":"heading_3","content":"8. **Extract<T, U>**","properties":{}},{"id":"block-33","type":"paragraph","content":"Opposite of `Exclude`: keeps only types assignable to `U`.","properties":{}},{"id":"block-34","type":"code","content":"```typescript\n`\ntype Status = \"success\" | \"error\" | \"loading\";\n\ntype LoadingOnly = Extract<Status, \"loading\">; // \"loading\"\n`\n```","properties":{"language":"$undefined"}},{"id":"block-35","type":"divider","content":"---","properties":{}},{"id":"block-36","type":"heading_3","content":"9. **NonNullable<T>**","properties":{}},{"id":"block-37","type":"paragraph","content":"Removes `null` and `undefined` from a type.","properties":{}},{"id":"block-38","type":"code","content":"```typescript\n`\ntype MaybeString = string | null | undefined;\n\ntype StrictString = NonNullable<MaybeString>; // string\n\n`\n```","properties":{"language":"$undefined"}},{"id":"block-39","type":"divider","content":"---","properties":{}},{"id":"block-40","type":"heading_2","content":"When Should You Use Utility Types?","properties":{}},{"id":"block-41","type":"table","content":"| Utility  | Use Case Example                                    |   |\n| -------- | --------------------------------------------------- | - |\n| Partial  | For update forms or patch operations                |   |\n| Pick     | For selecting a subset of fields from large objects |   |\n| Omit     | When exposing data without sensitive information    |   |\n| Record   | For key-value maps with predefined keys             |   |\n| Required | When you want to enforce presence of all fields     |   |\n| Readonly | For immutable configurations or props               |   |","properties":{}},{"id":"block-41-0","type":"table_row","content":"","properties":{}},{"id":"block-41-1","type":"table_row","content":"","properties":{}},{"id":"block-41-2","type":"table_row","content":"","properties":{}},{"id":"block-41-3","type":"table_row","content":"","properties":{}},{"id":"block-41-4","type":"table_row","content":"","properties":{}},{"id":"block-41-5","type":"table_row","content":"","properties":{}},{"id":"block-41-6","type":"table_row","content":"","properties":{}},{"id":"block-42","type":"divider","content":"---","properties":{}},{"id":"block-43","type":"heading_2","content":"Conclusion","properties":{}},{"id":"block-44","type":"paragraph","content":"TypeScript‚Äôs utility types are essential tools for transforming types in a declarative and flexible way. They can help you avoid duplication, simplify your logic, and create safer, more predictable code. Mastering these utilities is a key step in becoming a productive TypeScript developer.","properties":{}}]}]}],["$","div",null,{"className":"post-meta","children":[["$","div",null,{"className":"post-date","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-calendar h-4 w-4","children":[["$","rect","eu3xkr",{"width":"18","height":"18","x":"3","y":"4","rx":"2","ry":"2"}],["$","line","m3sa8f",{"x1":"16","x2":"16","y1":"2","y2":"6"}],["$","line","18kwsl",{"x1":"8","x2":"8","y1":"2","y2":"6"}],["$","line","xt86sb",{"x1":"3","x2":"21","y1":"10","y2":"10"}],"$undefined"]}],["$","span",null,{"children":"May 4, 2025"}]]}],["$","div",null,{"className":"post-tags","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-tag h-4 w-4","children":[["$","path","14b2ls",{"d":"M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z"}],["$","path","7u93v4",{"d":"M7 7h.01"}],"$undefined"]}],["$","div",null,{"className":"flex gap-2","children":[["$","span","JavaScript",{"className":"post-tag","children":["#","JavaScript"]}],["$","span","TypeScript",{"className":"post-tag","children":["#","TypeScript"]}]]}]]}]]}]]}]}]
